{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInvalid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805460ff191660011790556001625e79b760e01b03199052613038608452737109709ecfa91a80626ff3989d68f67f5b1dd12d63ffa1864960a4602060405180830381865afa15801562000060573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000086919062000155565b601980546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526101446004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620000fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000121919062000155565b601a80546001600160a01b0319166001600160a01b03929092169190911790553480156200014e57600080fd5b5062000187565b6000602082840312156200016857600080fd5b81516001600160a01b03811681146200018057600080fd5b9392505050565b615e5a80620001976000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c80639642ddaf116200007a5780639642ddaf1462000114578063ba414fa6146200011e578063cc8668de146200013c578063d591221f1462000146578063d9000ef31462000150578063fa7626d4146200015a57600080fd5b80630a9254e414620000c85780631aeb10a614620000d45780631f931c1c14620000de5780635d4696cf14620000f657806370557298146200010057806377fc70c6146200010a575b600080fd5b620000d262000168565b005b620000d262000718565b620000d2620000ef36600462001ec3565b5050505050565b620000d26200083a565b620000d2620008b8565b620000d262000b5f565b620000d262000bf5565b6200012862000d5d565b604051901515815260200160405180910390f35b620000d262000e92565b620000d262000f30565b620000d2620010ae565b600054620001289060ff1681565b601a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201526629a822a72222a960c91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620001df57600080fd5b505af1158015620001f4573d6000803e3d6000fd5b5050601954604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152672922a1a4a2ab22a960c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200027057600080fd5b505af115801562000285573d6000803e3d6000fd5b50505050604051620002979062001e0e565b604051809103906000f080158015620002b4573d6000803e3d6000fd5b50601480546001600160a01b0319166001600160a01b03929092169182179055604051309190601290620002e89062001e1c565b6001600160a01b03938416815292909116602083015260a0604083018190526008908301526726aa222a37b5b2b760c11b60c083015260e0606083018190526003908301526213551160ea1b61010083015260ff16608082015261012001604051809103906000f08015801562000363573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055604051620003929062001e2a565b604051809103906000f080158015620003af573d6000803e3d6000fd5b50601580546001600160a01b0319166001600160a01b0392909216919091179055604051620003de9062001e38565b604051809103906000f080158015620003fb573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03929092169190911790556040516200042a9062001e46565b604051809103906000f08015801562000447573d6000803e3d6000fd5b50601780546001600160a01b03199081166001600160a01b03938416179091556013546018805491909316911617905560408051600380825260808201909252600091602082015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200048f5790505060408051606081019091526015546001600160a01b0316815290915060208101600081526020016200051a60405180604001604052806011815260200170111a585b5bdb99131bdd5c19519858d95d607a1b815250620011bf565b8152508160008151811062000533576200053362001f95565b60209081029190910181019190915260408051606081019091526016546001600160a01b0316815290810160008152602001620005966040518060400160405280600e81526020016d13dddb995c9cda1a5c119858d95d60921b815250620011bf565b81525081600181518110620005af57620005af62001f95565b60209081029190910181019190915260408051606081019091526017546001600160a01b03168152908101600081526020016200060960405180604001604052806005815260200164045524332360dc1b815250620011bf565b8152508160028151811062000622576200062262001f95565b60209081029190910101526013546040516307e4c70760e21b81526001600160a01b0390911690631f931c1c906200066290849060009060040162001fab565b600060405180830381600087803b1580156200067d57600080fd5b505af115801562000692573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166352ef6b2c6040518163ffffffff1660e01b8152600401600060405180830381865afa158015620006ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620007149190810190620020e2565b5050565b601854601a5460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a76400006024820152620007a992919091169063095ea7b3906044015b6020604051808303816000875af11580156200077d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a39190620021a1565b6200155d565b601854601a54604051636eb1769f60e11b81523060048201526001600160a01b0391821660248201526200083892919091169063dd62ed3e90604401602060405180830381865afa15801562000803573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008299190620021c5565b670de0b6b3a7640000620015d5565b565b6018546040805163313ce56760e01b8152905162000838926001600160a01b03169163313ce5679160048083019260209291908290030181865afa15801562000887573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008ad9190620021df565b60ff166012620015d5565b620008c262000bf5565b601a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200091c57600080fd5b505af115801562000931573d6000803e3d6000fd5b505060185460405163095ea7b360e01b8152306004820152670de0b6b3a764000060248201526001600160a01b03909116925063095ea7b391506044016020604051808303816000875af11580156200098e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b49190620021a1565b50601854601a546019546040516323b872dd60e01b81526001600160a01b03928316600482015290821660248201526706f05b59d3b20000604482015262000a0a9291909116906323b872dd906064016200075d565b601854601a54604051636eb1769f60e11b81526001600160a01b03918216600482015230602482015262000a9a92919091169063dd62ed3e906044015b602060405180830381865afa15801562000a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8b9190620021c5565b6706f05b59d3b20000620015d5565b601854601a546040516370a0823160e01b81526001600160a01b03918216600482015262000b239291909116906370a0823190602401602060405180830381865afa15801562000aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b149190620021c5565b6783d6c7aab6360000620015d5565b6018546019546040516370a0823160e01b81526001600160a01b039182166004820152620008389291909116906370a082319060240162000a47565b604080518082018252600381526213551160ea1b602082015260185482516395d89b4160e01b8152925162000838936001600160a01b03909216916395d89b419160048083019260009291908290030181865afa15801562000bc5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bef919081019062002281565b620016cc565b601854601a546040516340c10f1960e01b81526001600160a01b039182166004820152678ac7230489e8000060248201529116906340c10f1990604401600060405180830381600087803b15801562000c4d57600080fd5b505af115801562000c62573d6000803e3d6000fd5b5050505062000838601860009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000cbe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ce49190620021c5565b601854601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000d31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d579190620021c5565b620015d5565b60008054610100900460ff161562000d7e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000e8d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000e0f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620022cf565b60408051601f198184030181529082905262000e2b9162002302565b6000604051808303816000865af19150503d806000811462000e6a576040519150601f19603f3d011682016040523d82523d6000602084013e62000e6f565b606091505b509150508080602001905181019062000e899190620021a1565b9150505b919050565b601854604080516306fdde0360e01b8152905162000838926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000edf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f09919081019062002281565b6040518060400160405280600881526020016726aa222a37b5b2b760c11b815250620016cc565b62000f3a62000bf5565b601a546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801562000f9457600080fd5b505af115801562000fa9573d6000803e3d6000fd5b505060185460195460405163a9059cbb60e01b81526001600160a01b039182166004820152611dd860248201529116925063a9059cbb91506044016020604051808303816000875af115801562001004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200102a9190620021a1565b506018546019546040516370a0823160e01b81526001600160a01b039182166004820152620008389291909116906370a0823190602401602060405180830381865afa1580156200107f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010a59190620021c5565b611dd8620015d5565b60405163f28dceb360e01b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f742065786973746044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390606401600060405180830381600087803b1580156200112957600080fd5b505af11580156200113e573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166314fb19db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001196573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bc9190620021c5565b50565b60408051600480825260a0820190925260609160009190816020015b6060815260200190600190039081620011db57905050905060405180604001604052806005815260200164666f72676560d81b8152508160008151811062001227576200122762001f95565b6020026020010181905250604051806040016040528060078152602001661a5b9cdc1958dd60ca1b8152508160018151811062001268576200126862001f95565b602002602001018190525082816002815181106200128a576200128a62001f95565b6020026020010181905250604051806040016040528060078152602001666d6574686f647360c81b81525081600381518110620012cb57620012cb62001f95565b6020908102919091010152604051638916046760e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790620013129085906004016200234e565b6000604051808303816000875af115801562001332573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200135c919081019062002281565b90508060006200136c8262001803565b9050600062001394604051806040016040528060018152602001600560f91b81525062001803565b90506000620013c060405180604001604052806005815260200164545241434560d81b81525062001803565b90505b620013cf838262001830565b15620013e857620013e183836200185b565b50620013c3565b60006200140e604051806040016040528060018152602001601d60f91b81525062001803565b9050600062001436604051806040016040528060018152602001600b60fa1b81525062001803565b905060006200145e604051806040016040528060018152602001601160f91b81525062001803565b90506200146c868462001883565b67ffffffffffffffff81111562001487576200148762001f7f565b604051908082528060200260200182016040528015620014b1578160200160208202803683370190505b50995060005b8a518110156200154e57620014cd87836200185b565b506000620014e883620014e18a886200185b565b906200192f565b80516020820151209091508c838151811062001508576200150862001f95565b6001600160e01b03199092166020928302919091019091015260006200153484620014e18b886200185b565b9050505080806200154590620023ca565b915050620014b7565b50505050505050505050919050565b80620011bc577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015c39060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620011bc620019c3565b80821462000714577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016489060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620016819190620023e6565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620016ba91906200241f565b60405180910390a162000714620019c3565b80604051602001620016df919062002302565b604051602081830303815290604052805190602001208260405160200162001708919062002302565b604051602081830303815290604052805190602001201462000714577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620017919060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620017ca91906200244a565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620016ba919062002489565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b602080830151835183519284015160009362001850929184919062001ad6565b141590505b92915050565b60408051808201909152600080825260208201526200187c83838362001c0e565b5092915050565b6000808260000151620018a9856000015186602001518660000151876020015162001cca565b620018b59190620024b4565b90505b83516020850151620018cb9190620024b4565b81116200187c5781620018de81620023ca565b92505082600001516200191b856020015183620018fc9190620024ca565b86516200190a9190620024ca565b838660000151876020015162001cca565b620019279190620024b4565b9050620018b8565b60408051808201909152600080825260208201528151835110156200195657508162001855565b815183516020850151600092916200196e91620024b4565b6200197a9190620024ca565b602084015190915060019082146200199c575082516020840151819020908220145b8015620019ba57835185518690620019b6908390620024ca565b9052505b50929392505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562001ac55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001a609291602001620022cf565b60408051601f198184030181529082905262001a7c9162002302565b6000604051808303816000865af19150503d806000811462001abb576040519150601f19603f3d011682016040523d82523d6000602084013e62001ac0565b606091505b505050505b6000805461ff001916610100179055565b60008085841162001c01576020841162001ba1576000841562001b2c57600162001b02866020620024ca565b62001b0f906008620024e0565b62001b1c906002620025f7565b62001b289190620024ca565b1990505b835181168562001b3d8989620024b4565b62001b499190620024ca565b805190935082165b81811462001b895787841162001b6e578794505050505062001c06565b8362001b7a8162002605565b94505082845116905062001b51565b62001b958785620024b4565b94505050505062001c06565b83832062001bb08588620024ca565b62001bbc9087620024b4565b91505b85821062001bff5784822080820362001be95762001bde8684620024b4565b935050505062001c06565b62001bf6600184620024ca565b92505062001bbf565b505b849150505b949350505050565b6040805180820190915260008082526020820152600062001c42856000015186602001518660000151876020015162001cca565b60208087018051918601919091525190915062001c609082620024ca565b83528451602086015162001c759190620024b4565b810362001c86576000855262001cbe565b8351835162001c969190620024b4565b8551869062001ca7908390620024ca565b905250835162001cb89082620024b4565b60208601525b829150505b9392505050565b6000838186851162001df7576020851162001d9c576000851562001d2157600162001cf7876020620024ca565b62001d04906008620024e0565b62001d11906002620025f7565b62001d1d9190620024ca565b1990505b8451811660008762001d348b8b620024b4565b62001d409190620024ca565b855190915083165b82811462001d8d5781861062001d725762001d648b8b620024b4565b965050505050505062001c06565b8562001d7e81620023ca565b96505083865116905062001d48565b85965050505050505062001c06565b508383206000905b62001db08689620024ca565b821162001df55785832080820362001dcf578394505050505062001c06565b62001ddc600185620024b4565b935050818062001dec90620023ca565b92505062001da4565b505b62001e038787620024b4565b979650505050505050565b6110fb806200262083390190565b611517806200371b83390190565b6106ae8062004c3283390190565b61022a80620052e083390190565b61091b806200550a83390190565b6001600160a01b0381168114620011bc57600080fd5b803562000e8d8162001e54565b60008083601f84011262001e8a57600080fd5b50813567ffffffffffffffff81111562001ea357600080fd5b60208301915083602082850101111562001ebc57600080fd5b9250929050565b60008060008060006060868803121562001edc57600080fd5b853567ffffffffffffffff8082111562001ef557600080fd5b818801915088601f83011262001f0a57600080fd5b81358181111562001f1a57600080fd5b8960208260051b850101111562001f3057600080fd5b6020830197508096505062001f486020890162001e6a565b9450604088013591508082111562001f5f57600080fd5b5062001f6e8882890162001e77565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006060808301818452808651808352608092508286019150828160051b8701016020808a0160005b848110156200208057898403607f19018652815180516001600160a01b031685528381015189860190600381106200201c57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156200206a5783516001600160e01b03191682529286019260019290920191908601906200203e565b5097850197955050509082019060010162001fd4565b50506001600160a01b0389168882015250868103604088015260008152602081019998505050505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715620020da57620020da62001f7f565b604052919050565b60006020808385031215620020f657600080fd5b825167ffffffffffffffff808211156200210f57600080fd5b818501915085601f8301126200212457600080fd5b81518181111562002139576200213962001f7f565b8060051b91506200214c848301620020ae565b81815291830184019184810190888411156200216757600080fd5b938501935b83851015620021955784519250620021848362001e54565b82825293850193908501906200216c565b98975050505050505050565b600060208284031215620021b457600080fd5b8151801515811462001cc357600080fd5b600060208284031215620021d857600080fd5b5051919050565b600060208284031215620021f257600080fd5b815160ff8116811462001cc357600080fd5b60005b838110156200222157818101518382015260200162002207565b50506000910152565b600067ffffffffffffffff83111562002247576200224762001f7f565b6200225c601f8401601f1916602001620020ae565b90508281528383830111156200227157600080fd5b62001cc383602083018462002204565b6000602082840312156200229457600080fd5b815167ffffffffffffffff811115620022ac57600080fd5b8201601f81018413620022be57600080fd5b62001c06848251602084016200222a565b6001600160e01b0319831681528151600090620022f481600485016020870162002204565b919091016004019392505050565b600082516200231681846020870162002204565b9190910192915050565b600081518084526200233a81602086016020860162002204565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620023a757603f198886030184526200239485835162002320565b9450928501929085019060010162002375565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201620023df57620023df620023b4565b5060010190565b6040815260006200241160408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200241160408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200247560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262001c06818562002320565b6040815260006200247560408301600a815269080808081058dd1d585b60b21b602082015260400190565b80820180821115620018555762001855620023b4565b81810381811115620018555762001855620023b4565b8082028115828204841417620018555762001855620023b4565b600181815b808511156200253b5781600019048211156200251f576200251f620023b4565b808516156200252d57918102915b93841c9390800290620024ff565b509250929050565b600082620025545750600162001855565b81620025635750600062001855565b81600181146200257c57600281146200258757620025a7565b600191505062001855565b60ff8411156200259b576200259b620023b4565b50506001821b62001855565b5060208310610133831016604e8410600b8410161715620025cc575081810a62001855565b620025d88383620024fa565b8060001904821115620025ef57620025ef620023b4565b029392505050565b600062001cc3838362002543565b600081620026175762002617620023b4565b50600019019056fe608060405234801561001057600080fd5b506110db806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610bc5565b610045565b005b61004d61009e565b61009761005a8587610d0b565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020611086833981519152600401546001600160a01b031633146100d957604051630305808160e41b815260040160405180910390fd5b565b60005b83518110156102615760008482815181106100fb576100fb610e4f565b60200260200101516020015190506000600281111561011c5761011c610e65565b81600281111561012e5761012e610e65565b0361017c5761017785838151811061014857610148610e4f565b60200260200101516000015186848151811061016657610166610e4f565b6020026020010151604001516102ac565b61024e565b600181600281111561019057610190610e65565b036101d9576101778583815181106101aa576101aa610e4f565b6020026020010151600001518684815181106101c8576101c8610e4f565b6020026020010151604001516103ea565b60028160028111156101ed576101ed610e65565b036102365761017785838151811061020757610207610e4f565b60200260200101516000015186848151811061022557610225610e4f565b602002602001015160400151610533565b60405162c5e5d760e31b815260040160405180910390fd5b508061025981610e91565b9150506100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161029593929190610efa565b60405180910390a16102a78282610604565b505050565b60008151116102ce5760405163092d2fe560e41b815260040160405180910390fd5b6000805160206110868339815191526001600160a01b0383166103045760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361033a5761033a8285610710565b60005b835181101561009757600084828151811061035a5761035a610e4f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156103bc5760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6103c88583868a610761565b836103d281610ffa565b945050505080806103e290610e91565b91505061033d565b600081511161040c5760405163092d2fe560e41b815260040160405180910390fd5b6000805160206110868339815191526001600160a01b0383166104425760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610478576104788285610710565b60005b835181101561009757600084828151811061049857610498610e4f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036104fa57604051631c04188b60e31b81526001600160e01b0319831660048201526024016103b3565b610505858284610801565b6105118583868a610761565b8361051b81610ffa565b9450505050808061052b90610e91565b91505061047b565b60008151116105555760405163092d2fe560e41b815260040160405180910390fd5b6000805160206110868339815191526001600160a01b0383161561058c57604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156105fe5760008382815181106105ac576105ac610e4f565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166105e9848284610801565b505080806105f690610e91565b91505061058f565b50505050565b6001600160a01b038216610636578051156106325760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805160000361065857604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146106715761067182610b40565b600080836001600160a01b03168360405161068c9190611020565b600060405180830381855af49150503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b5091509150816105fe578051156106f7578060405162461bcd60e51b81526004016103b3919061103c565b604051633a18f8dd60e01b815260040160405180910390fd5b61071981610b40565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661083357604051622902d360e91b81526001600160e01b0319821660048201526024016103b3565b306001600160a01b038316036108685760405163069731c560e41b81526001600160e01b0319821660048201526024016103b3565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b031692916108b791611056565b90508082146109a9576001600160a01b038416600090815260018601602052604081208054839081106108ec576108ec610e4f565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811061093d5761093d610e4f565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b038416600090815260018601602052604090208054806109d2576109d261106f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610097576002850154600090610a3590600190611056565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ae4576000876002018381548110610a7457610a74610e4f565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610aa557610aa5610e4f565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610af757610af761106f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b8061063257604051633c11a9c560e21b815260040160405180910390fd5b80356001600160a01b0381168114610b7757600080fd5b919050565b60008083601f840112610b8e57600080fd5b50813567ffffffffffffffff811115610ba657600080fd5b602083019150836020828501011115610bbe57600080fd5b9250929050565b600080600080600060608688031215610bdd57600080fd5b853567ffffffffffffffff80821115610bf557600080fd5b818801915088601f830112610c0957600080fd5b813581811115610c1857600080fd5b8960208260051b8501011115610c2d57600080fd5b60208301975080965050610c4360208901610b60565b94506040880135915080821115610c5957600080fd5b50610c6688828901610b7c565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610cb057610cb0610c77565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdf57610cdf610c77565b604052919050565b600067ffffffffffffffff821115610d0157610d01610c77565b5060051b60200190565b6000610d1e610d1984610ce7565b610cb6565b83815260208082019190600586811b860136811115610d3c57600080fd5b865b81811015610e4257803567ffffffffffffffff80821115610d5f5760008081fd5b818a01915060608236031215610d755760008081fd5b610d7d610c8d565b610d8683610b60565b81528683013560038110610d9a5760008081fd5b8188015260408381013583811115610db25760008081fd5b939093019236601f850112610dc957600092508283fd5b83359250610dd9610d1984610ce7565b83815292871b84018801928881019036851115610df65760008081fd5b948901945b84861015610e2b5785356001600160e01b031981168114610e1c5760008081fd5b82529489019490890190610dfb565b918301919091525088525050948301948301610d3e565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ea357610ea3610e7b565b5060010190565b60005b83811015610ec5578181015183820152602001610ead565b50506000910152565b60008151808452610ee6816020860160208601610eaa565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610fca57898403607f19018652815180516001600160a01b03168552838101518986019060038110610f6957634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610fb55783516001600160e01b0319168252928601926001929092019190860190610f8b565b50978501979550505090820190600101610f23565b50506001600160a01b038a16908801528681036040880152610fec8189610ece565b9a9950505050505050505050565b60006001600160601b0380831681810361101657611016610e7b565b6001019392505050565b60008251611032818460208701610eaa565b9190910192915050565b60208152600061104f6020830184610ece565b9392505050565b8181038181111561106957611069610e7b565b92915050565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220da0c11f31cc2d384535b537c8c8c557b9f252a523989a54a5d562abb3ea9661264736f6c6343000815003360806040526040516200151738038062001517833981016040819052620000269162000ed2565b620000318562000156565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620000485750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b81600081518110620000bb57620000bb62000f7e565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b03881681529081016000815260200182815250826000815181106200010e576200010e62000f7e565b60200260200101819052506200013c82600060405180602001604052806000815250620001da60201b60201c565b62000149858585620003f0565b5050505050505062001308565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020620014f7833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b8351811015620003a1576000848281518110620001fe57620001fe62000f7e565b60200260200101516020015190506000600281111562000222576200022262000f94565b81600281111562000237576200023762000f94565b0362000295576200028f85838151811062000256576200025662000f7e565b60200260200101516000015186848151811062000277576200027762000f7e565b6020026020010151604001516200045860201b60201c565b6200038b565b6001816002811115620002ac57620002ac62000f94565b0362000304576200028f858381518110620002cb57620002cb62000f7e565b602002602001015160000151868481518110620002ec57620002ec62000f7e565b6020026020010151604001516200063960201b60201c565b60028160028111156200031b576200031b62000f94565b0362000373576200028f8583815181106200033a576200033a62000f7e565b6020026020010151600001518684815181106200035b576200035b62000f7e565b6020026020010151604001516200082160201b60201c565b60405162c5e5d760e31b815260040160405180910390fd5b5080620003988162000fc0565b915050620001dd565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051620003d7939291906200100a565b60405180910390a1620003eb8282620008fe565b505050565b600080516020620014f78339815191527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13256200042d85826200119f565b50600a81016200043e84826200119f565b50600b01805460ff191660ff929092169190911790555050565b60008151116200047b5760405163092d2fe560e41b815260040160405180910390fd5b600080516020620014f78339815191526001600160a01b038316620004b35760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003620004ec57620004ec828562000a18565b60005b83518110156200063257600084828151811062000510576200051062000f7e565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620005735760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558362000617816200126b565b94505050508080620006299062000fc0565b915050620004ef565b5050505050565b60008151116200065c5760405163092d2fe560e41b815260040160405180910390fd5b600080516020620014f78339815191526001600160a01b038316620006945760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003620006cd57620006cd828562000a18565b60005b835181101562000632576000848281518110620006f157620006f162000f7e565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036200075557604051631c04188b60e31b81526001600160e01b0319831660048201526024016200056a565b6200076285828462000a6b565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558362000806816200126b565b94505050508080620008189062000fc0565b915050620006d0565b6000815111620008445760405163092d2fe560e41b815260040160405180910390fd5b600080516020620014f78339815191526001600160a01b038316156200087d57604051631be65fe560e21b815260040160405180910390fd5b60005b8251811015620008f8576000838281518110620008a157620008a162000f7e565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316620008e084828462000a6b565b50508080620008ef9062000fc0565b91505062000880565b50505050565b6001600160a01b03821662000932578051156200092e5760405163c21b1ab760e01b815260040160405180910390fd5b5050565b80516000036200095557604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146200097157620009718262000dc7565b600080836001600160a01b0316836040516200098e91906200129c565b600060405180830381855af49150503d8060008114620009cb576040519150601f19603f3d011682016040523d82523d6000602084013e620009d0565b606091505b509150915081620008f857805115620009ff578060405162461bcd60e51b81526004016200056a9190620012ba565b604051633a18f8dd60e01b815260040160405180910390fd5b62000a238162000dc7565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b03821662000a9f57604051622902d360e91b81526001600160e01b0319821660048201526024016200056a565b306001600160a01b0383160362000ad65760405163069731c560e41b81526001600160e01b0319821660048201526024016200056a565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929162000b2791620012d6565b905080821462000c20576001600160a01b0384166000908152600186016020526040812080548390811062000b605762000b6062000f7e565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000bb45762000bb462000f7e565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384166000908152600186016020526040902080548062000c4c5762000c4c620012f2565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036200063257600285015460009062000cb290600190620012d6565b6001600160a01b038616600090815260018089016020526040909120015490915080821462000d6857600087600201838154811062000cf55762000cf562000f7e565b6000918252602090912001546002890180546001600160a01b03909216925082918490811062000d295762000d2962000f7e565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b8660020180548062000d7e5762000d7e620012f2565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b806200092e57604051633c11a9c560e21b815260040160405180910390fd5b80516001600160a01b038116811462000e0057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000e3857818101518382015260200162000e1e565b50506000910152565b600082601f83011262000e5357600080fd5b81516001600160401b038082111562000e705762000e7062000e05565b604051601f8301601f19908116603f0116810190828211818310171562000e9b5762000e9b62000e05565b8160405283815286602085880101111562000eb557600080fd5b62000ec884602083016020890162000e1b565b9695505050505050565b600080600080600060a0868803121562000eeb57600080fd5b62000ef68662000de8565b945062000f066020870162000de8565b60408701519094506001600160401b038082111562000f2457600080fd5b62000f3289838a0162000e41565b9450606088015191508082111562000f4957600080fd5b5062000f588882890162000e41565b925050608086015160ff8116811462000f7057600080fd5b809150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000fd55762000fd562000faa565b5060010190565b6000815180845262000ff681602086016020860162000e1b565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015620010df57898403607f19018652815180516001600160a01b031685528381015189860190600381106200107b57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015620010c95783516001600160e01b03191682529286019260019290920191908601906200109d565b5097850197955050509082019060010162001033565b50506001600160a01b038a1690880152868103604088015262001103818962000fdc565b9a9950505050505050505050565b600181811c908216806200112657607f821691505b6020821081036200114757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003eb57600081815260208120601f850160051c81016020861015620011765750805b601f850160051c820191505b81811015620011975782815560010162001182565b505050505050565b81516001600160401b03811115620011bb57620011bb62000e05565b620011d381620011cc845462001111565b846200114d565b602080601f8311600181146200120b5760008415620011f25750858301515b600019600386901b1c1916600185901b17855562001197565b600085815260208120601f198616915b828110156200123c578886015182559484019460019091019084016200121b565b50858210156200125b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160601b038281166002600160601b0319810162001292576200129262000faa565b6001019392505050565b60008251620012b081846020870162000e1b565b9190910192915050565b602081526000620012cf602083018462000fdc565b9392505050565b81810381811115620012ec57620012ec62000faa565b92915050565b634e487b7160e01b600052603160045260246000fd5b6101df80620013186000396000f3fe6080604052600436106100225760003560e01c806354353f2f146100e557610029565b3661002957005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b0316806100c15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604482015260640160405180910390fd5b3660008037600080366000845af43d6000803e8080156100e0573d6000f35b3d6000fd5b3480156100f157600080fd5b506100fa610110565b6040516101079190610130565b60405180910390f35b60606040518060600160405280602b815260200161017f602b9139905090565b600060208083528351808285015260005b8181101561015d57858101830151858201604001528201610141565b506000604082860101526040601f19601f830116850101925050509291505056fe5448495320495320414e204558414d504c45204f4620414e20494d4d555441424c452046554e4354494f4ea26469706673582212207eccc12c9f9615a361057d9fde81bbc7c1532858e09781d351a03f5fad9039b564736f6c63430008150033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c608060405234801561001057600080fd5b5061068e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100bd5780637a0ed627146100d2578063adfca15e146100e7578063cdffacc614610107575b600080fd5b6100a861006a366004610469565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100c561015f565b6040516100b4919061049a565b6100da6101d2565b6040516100b4919061052c565b6100fa6100f53660046105a9565b61039d565b6040516100b491906105d2565b610147610115366004610469565b6001600160e01b031916600090815260008051602061063983398151915260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100b4565b60606000600080516020610639833981519152600281018054604080516020808402820181019092528281529394508301828280156101c757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101a9575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610639833981519152908067ffffffffffffffff811115610220576102206105e5565b60405190808252806020026020018201604052801561026657816020015b60408051808201909152600081526060602082015281526020019060019003908161023e5790505b50925060005b8181101561039757600083600201828154811061028b5761028b6105fb565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102be576102be6105fb565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561035d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161031f5790505b5050505050858381518110610374576103746105fb565b60200260200101516020018190525050808061038f90610611565b91505061026c565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60209081526040918290208054835181840281018401909452808452606093600080516020610639833981519152939092919083018282801561045c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161041e5790505b5050505050915050919050565b60006020828403121561047b57600080fd5b81356001600160e01b03198116811461049357600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156104db5783516001600160a01b0316835292840192918401916001016104b6565b50909695505050505050565b600081518084526020808501945080840160005b838110156105215781516001600160e01b031916875295820195908201906001016104fb565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561059b57888303603f19018552815180516001600160a01b03168452870151878401879052610588878501826104e7565b9588019593505090860190600101610553565b509098975050505050505050565b6000602082840312156105bb57600080fd5b81356001600160a01b038116811461049357600080fd5b60208152600061049360208301846104e7565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161063157634e487b7160e01b600052601160045260246000fd5b506001019056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220035cc389980f7e84fed5fe2966ac016827ae22946cedbe435ea18e5439058e5d64736f6c63430008150033608060405234801561001057600080fd5b5061020a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461005f575b600080fd5b610043610074565b6040516001600160a01b03909116815260200160405180910390f35b61007261006d3660046101a4565b6100ac565b005b60006100a77fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b6100b46100c0565b6100bd8161010f565b50565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461010d57604051630305808160e41b815260040160405180910390fd5b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000602082840312156101b657600080fd5b81356001600160a01b03811681146101cd57600080fd5b939250505056fea26469706673582212206f5d1c61a22d9de0dbac37d8d1c14ed81e4f6a3556331369101225219b16c5af64736f6c63430008150033608060405234801561001057600080fd5b506108fb806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015c57806370a082311461017157806395d89b41146101a7578063a9059cbb146101af578063dd62ed3e146101c257600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd14610115578063313ce56714610128575b600080fd5b6100ab6101d5565b6040516100b89190610705565b60405180910390f35b6100d46100cf36600461076f565b610277565b60405190151581526020016100b8565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1323545b6040519081526020016100b8565b6100d4610123366004610799565b610291565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13275460405160ff90911681526020016100b8565b61016f61016a36600461076f565b6102b5565b005b61010761017f3660046107d5565b6001600160a01b031660009081526000805160206108a6833981519152602052604090205490565b6100ab6102cb565b6100d46101bd36600461076f565b6102ea565b6101076101d03660046107f7565b6102f8565b606060008051602061088683398151915260090180546101f49061082a565b80601f01602080910402602001604051908101604052809291908181526020018280546102209061082a565b801561026d5780601f106102425761010080835404028352916020019161026d565b820191906000526020600020905b81548152906001019060200180831161025057829003601f168201915b5050505050905090565b600033610285818585610342565b60019150505b92915050565b60003361029f858285610354565b6102aa8585856103bf565b506001949350505050565b6102bd61041e565b6102c7828261045b565b5050565b6060600080516020610886833981519152600a0180546101f49061082a565b6000336102858185856103bf565b6001600160a01b0391821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13226020908152604080832093909416825291909152205490565b61034f8383836001610491565b505050565b600061036084846102f8565b905060001981146103b957818110156103aa57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103b984848484036000610491565b50505050565b6001600160a01b0383166103e957604051634b637e8f60e11b8152600060048201526024016103a1565b6001600160a01b0382166104135760405163ec442f0560e01b8152600060048201526024016103a1565b61034f838383610585565b600080516020610886833981519152600401546001600160a01b0316331461045957604051630305808160e41b815260040160405180910390fd5b565b6001600160a01b0382166104855760405163ec442f0560e01b8152600060048201526024016103a1565b6102c760008383610585565b6001600160a01b0384166104bb5760405163e602df0560e01b8152600060048201526024016103a1565b6001600160a01b0383166104e557604051634a1406b160e11b8152600060048201526024016103a1565b6001600160a01b0384811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13226020908152604080832093871683529290522082905580156103b957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161057791815260200190565b60405180910390a350505050565b6001600160a01b0383166105c0578060008051602061088683398151915260070160008282546105b59190610864565b9091555061064c9050565b6001600160a01b03831660009081526000805160206108a68339815191526020526040902054818110156106205760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a1565b6001600160a01b03841660009081526000805160206108a6833981519152602052604090209082900390555b6001600160a01b038216610687577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1323805482900390556106b3565b6001600160a01b03821660009081526000805160206108a6833981519152602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106f891815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561073257858101830151858201604001528201610716565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076a57600080fd5b919050565b6000806040838503121561078257600080fd5b61078b83610753565b946020939093013593505050565b6000806000606084860312156107ae57600080fd5b6107b784610753565b92506107c560208501610753565b9150604084013590509250925092565b6000602082840312156107e757600080fd5b6107f082610753565b9392505050565b6000806040838503121561080a57600080fd5b61081383610753565b915061082160208401610753565b90509250929050565b600181811c9082168061083e57607f821691505b60208210810361085e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028b57634e487b7160e01b600052601160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1321a26469706673582212205e21ef61426debbbc502f8905d5b71f23fe9ada0c50a9df020b8c067151cb2c864736f6c63430008150033a26469706673582212209101e9a05f60750c4a1b189012490bb1a73139004060aa98b1ce79b35297c82764736f6c63430008150033",
    "sourceMap": "464:3321:30:-:0;;;;;1572:26:15;;;-1:-1:-1;;1572:26:15;1594:4;1572:26;;;-1:-1:-1;;;;;;741:14:30;;749:5;741:14;172:25:32;741:7:30;;145:18:32;741:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;722:33;;;-1:-1:-1;;;;;;722:33:30;-1:-1:-1;;;;;722:33:30;;;;;;;;;;779:12;;-1:-1:-1;;;;;;779:12:30;;787:3;779:12;;;172:25:32;779:7:30;;;;145:18:32;;779:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;761:30;;;-1:-1:-1;;;;;;761:30:30;-1:-1:-1;;;;;761:30:30;;;;;;;;;;464:3321;;;;;;;;;;;;208:290:32;278:6;331:2;319:9;310:7;306:23;302:32;299:52;;;347:1;344;337:12;299:52;373:16;;-1:-1:-1;;;;;418:31:32;;408:42;;398:70;;464:1;461;454:12;398:70;487:5;208:290;-1:-1:-1;;;208:290:32:o;503:187::-;464:3321:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c80639642ddaf116200007a5780639642ddaf1462000114578063ba414fa6146200011e578063cc8668de146200013c578063d591221f1462000146578063d9000ef31462000150578063fa7626d4146200015a57600080fd5b80630a9254e414620000c85780631aeb10a614620000d45780631f931c1c14620000de5780635d4696cf14620000f657806370557298146200010057806377fc70c6146200010a575b600080fd5b620000d262000168565b005b620000d262000718565b620000d2620000ef36600462001ec3565b5050505050565b620000d26200083a565b620000d2620008b8565b620000d262000b5f565b620000d262000bf5565b6200012862000d5d565b604051901515815260200160405180910390f35b620000d262000e92565b620000d262000f30565b620000d2620010ae565b600054620001289060ff1681565b601a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201526629a822a72222a960c91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620001df57600080fd5b505af1158015620001f4573d6000803e3d6000fd5b5050601954604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260086044820152672922a1a4a2ab22a960c11b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200027057600080fd5b505af115801562000285573d6000803e3d6000fd5b50505050604051620002979062001e0e565b604051809103906000f080158015620002b4573d6000803e3d6000fd5b50601480546001600160a01b0319166001600160a01b03929092169182179055604051309190601290620002e89062001e1c565b6001600160a01b03938416815292909116602083015260a0604083018190526008908301526726aa222a37b5b2b760c11b60c083015260e0606083018190526003908301526213551160ea1b61010083015260ff16608082015261012001604051809103906000f08015801562000363573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055604051620003929062001e2a565b604051809103906000f080158015620003af573d6000803e3d6000fd5b50601580546001600160a01b0319166001600160a01b0392909216919091179055604051620003de9062001e38565b604051809103906000f080158015620003fb573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03929092169190911790556040516200042a9062001e46565b604051809103906000f08015801562000447573d6000803e3d6000fd5b50601780546001600160a01b03199081166001600160a01b03938416179091556013546018805491909316911617905560408051600380825260808201909252600091602082015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200048f5790505060408051606081019091526015546001600160a01b0316815290915060208101600081526020016200051a60405180604001604052806011815260200170111a585b5bdb99131bdd5c19519858d95d607a1b815250620011bf565b8152508160008151811062000533576200053362001f95565b60209081029190910181019190915260408051606081019091526016546001600160a01b0316815290810160008152602001620005966040518060400160405280600e81526020016d13dddb995c9cda1a5c119858d95d60921b815250620011bf565b81525081600181518110620005af57620005af62001f95565b60209081029190910181019190915260408051606081019091526017546001600160a01b03168152908101600081526020016200060960405180604001604052806005815260200164045524332360dc1b815250620011bf565b8152508160028151811062000622576200062262001f95565b60209081029190910101526013546040516307e4c70760e21b81526001600160a01b0390911690631f931c1c906200066290849060009060040162001fab565b600060405180830381600087803b1580156200067d57600080fd5b505af115801562000692573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166352ef6b2c6040518163ffffffff1660e01b8152600401600060405180830381865afa158015620006ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620007149190810190620020e2565b5050565b601854601a5460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a76400006024820152620007a992919091169063095ea7b3906044015b6020604051808303816000875af11580156200077d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a39190620021a1565b6200155d565b601854601a54604051636eb1769f60e11b81523060048201526001600160a01b0391821660248201526200083892919091169063dd62ed3e90604401602060405180830381865afa15801562000803573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008299190620021c5565b670de0b6b3a7640000620015d5565b565b6018546040805163313ce56760e01b8152905162000838926001600160a01b03169163313ce5679160048083019260209291908290030181865afa15801562000887573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008ad9190620021df565b60ff166012620015d5565b620008c262000bf5565b601a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200091c57600080fd5b505af115801562000931573d6000803e3d6000fd5b505060185460405163095ea7b360e01b8152306004820152670de0b6b3a764000060248201526001600160a01b03909116925063095ea7b391506044016020604051808303816000875af11580156200098e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b49190620021a1565b50601854601a546019546040516323b872dd60e01b81526001600160a01b03928316600482015290821660248201526706f05b59d3b20000604482015262000a0a9291909116906323b872dd906064016200075d565b601854601a54604051636eb1769f60e11b81526001600160a01b03918216600482015230602482015262000a9a92919091169063dd62ed3e906044015b602060405180830381865afa15801562000a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8b9190620021c5565b6706f05b59d3b20000620015d5565b601854601a546040516370a0823160e01b81526001600160a01b03918216600482015262000b239291909116906370a0823190602401602060405180830381865afa15801562000aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b149190620021c5565b6783d6c7aab6360000620015d5565b6018546019546040516370a0823160e01b81526001600160a01b039182166004820152620008389291909116906370a082319060240162000a47565b604080518082018252600381526213551160ea1b602082015260185482516395d89b4160e01b8152925162000838936001600160a01b03909216916395d89b419160048083019260009291908290030181865afa15801562000bc5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bef919081019062002281565b620016cc565b601854601a546040516340c10f1960e01b81526001600160a01b039182166004820152678ac7230489e8000060248201529116906340c10f1990604401600060405180830381600087803b15801562000c4d57600080fd5b505af115801562000c62573d6000803e3d6000fd5b5050505062000838601860009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000cbe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ce49190620021c5565b601854601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000d31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d579190620021c5565b620015d5565b60008054610100900460ff161562000d7e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000e8d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000e0f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620022cf565b60408051601f198184030181529082905262000e2b9162002302565b6000604051808303816000865af19150503d806000811462000e6a576040519150601f19603f3d011682016040523d82523d6000602084013e62000e6f565b606091505b509150508080602001905181019062000e899190620021a1565b9150505b919050565b601854604080516306fdde0360e01b8152905162000838926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000edf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f09919081019062002281565b6040518060400160405280600881526020016726aa222a37b5b2b760c11b815250620016cc565b62000f3a62000bf5565b601a546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801562000f9457600080fd5b505af115801562000fa9573d6000803e3d6000fd5b505060185460195460405163a9059cbb60e01b81526001600160a01b039182166004820152611dd860248201529116925063a9059cbb91506044016020604051808303816000875af115801562001004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200102a9190620021a1565b506018546019546040516370a0823160e01b81526001600160a01b039182166004820152620008389291909116906370a0823190602401602060405180830381865afa1580156200107f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010a59190620021c5565b611dd8620015d5565b60405163f28dceb360e01b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f742065786973746044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390606401600060405180830381600087803b1580156200112957600080fd5b505af11580156200113e573d6000803e3d6000fd5b50505050601360009054906101000a90046001600160a01b03166001600160a01b03166314fb19db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001196573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bc9190620021c5565b50565b60408051600480825260a0820190925260609160009190816020015b6060815260200190600190039081620011db57905050905060405180604001604052806005815260200164666f72676560d81b8152508160008151811062001227576200122762001f95565b6020026020010181905250604051806040016040528060078152602001661a5b9cdc1958dd60ca1b8152508160018151811062001268576200126862001f95565b602002602001018190525082816002815181106200128a576200128a62001f95565b6020026020010181905250604051806040016040528060078152602001666d6574686f647360c81b81525081600381518110620012cb57620012cb62001f95565b6020908102919091010152604051638916046760e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90638916046790620013129085906004016200234e565b6000604051808303816000875af115801562001332573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200135c919081019062002281565b90508060006200136c8262001803565b9050600062001394604051806040016040528060018152602001600560f91b81525062001803565b90506000620013c060405180604001604052806005815260200164545241434560d81b81525062001803565b90505b620013cf838262001830565b15620013e857620013e183836200185b565b50620013c3565b60006200140e604051806040016040528060018152602001601d60f91b81525062001803565b9050600062001436604051806040016040528060018152602001600b60fa1b81525062001803565b905060006200145e604051806040016040528060018152602001601160f91b81525062001803565b90506200146c868462001883565b67ffffffffffffffff81111562001487576200148762001f7f565b604051908082528060200260200182016040528015620014b1578160200160208202803683370190505b50995060005b8a518110156200154e57620014cd87836200185b565b506000620014e883620014e18a886200185b565b906200192f565b80516020820151209091508c838151811062001508576200150862001f95565b6001600160e01b03199092166020928302919091019091015260006200153484620014e18b886200185b565b9050505080806200154590620023ca565b915050620014b7565b50505050505050505050919050565b80620011bc577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015c39060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1620011bc620019c3565b80821462000714577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620016489060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620016819190620023e6565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620016ba91906200241f565b60405180910390a162000714620019c3565b80604051602001620016df919062002302565b604051602081830303815290604052805190602001208260405160200162001708919062002302565b604051602081830303815290604052805190602001201462000714577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620017919060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620017ca91906200244a565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051620016ba919062002489565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b602080830151835183519284015160009362001850929184919062001ad6565b141590505b92915050565b60408051808201909152600080825260208201526200187c83838362001c0e565b5092915050565b6000808260000151620018a9856000015186602001518660000151876020015162001cca565b620018b59190620024b4565b90505b83516020850151620018cb9190620024b4565b81116200187c5781620018de81620023ca565b92505082600001516200191b856020015183620018fc9190620024ca565b86516200190a9190620024ca565b838660000151876020015162001cca565b620019279190620024b4565b9050620018b8565b60408051808201909152600080825260208201528151835110156200195657508162001855565b815183516020850151600092916200196e91620024b4565b6200197a9190620024ca565b602084015190915060019082146200199c575082516020840151819020908220145b8015620019ba57835185518690620019b6908390620024ca565b9052505b50929392505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562001ac55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001a609291602001620022cf565b60408051601f198184030181529082905262001a7c9162002302565b6000604051808303816000865af19150503d806000811462001abb576040519150601f19603f3d011682016040523d82523d6000602084013e62001ac0565b606091505b505050505b6000805461ff001916610100179055565b60008085841162001c01576020841162001ba1576000841562001b2c57600162001b02866020620024ca565b62001b0f906008620024e0565b62001b1c906002620025f7565b62001b289190620024ca565b1990505b835181168562001b3d8989620024b4565b62001b499190620024ca565b805190935082165b81811462001b895787841162001b6e578794505050505062001c06565b8362001b7a8162002605565b94505082845116905062001b51565b62001b958785620024b4565b94505050505062001c06565b83832062001bb08588620024ca565b62001bbc9087620024b4565b91505b85821062001bff5784822080820362001be95762001bde8684620024b4565b935050505062001c06565b62001bf6600184620024ca565b92505062001bbf565b505b849150505b949350505050565b6040805180820190915260008082526020820152600062001c42856000015186602001518660000151876020015162001cca565b60208087018051918601919091525190915062001c609082620024ca565b83528451602086015162001c759190620024b4565b810362001c86576000855262001cbe565b8351835162001c969190620024b4565b8551869062001ca7908390620024ca565b905250835162001cb89082620024b4565b60208601525b829150505b9392505050565b6000838186851162001df7576020851162001d9c576000851562001d2157600162001cf7876020620024ca565b62001d04906008620024e0565b62001d11906002620025f7565b62001d1d9190620024ca565b1990505b8451811660008762001d348b8b620024b4565b62001d409190620024ca565b855190915083165b82811462001d8d5781861062001d725762001d648b8b620024b4565b965050505050505062001c06565b8562001d7e81620023ca565b96505083865116905062001d48565b85965050505050505062001c06565b508383206000905b62001db08689620024ca565b821162001df55785832080820362001dcf578394505050505062001c06565b62001ddc600185620024b4565b935050818062001dec90620023ca565b92505062001da4565b505b62001e038787620024b4565b979650505050505050565b6110fb806200262083390190565b611517806200371b83390190565b6106ae8062004c3283390190565b61022a80620052e083390190565b61091b806200550a83390190565b6001600160a01b0381168114620011bc57600080fd5b803562000e8d8162001e54565b60008083601f84011262001e8a57600080fd5b50813567ffffffffffffffff81111562001ea357600080fd5b60208301915083602082850101111562001ebc57600080fd5b9250929050565b60008060008060006060868803121562001edc57600080fd5b853567ffffffffffffffff8082111562001ef557600080fd5b818801915088601f83011262001f0a57600080fd5b81358181111562001f1a57600080fd5b8960208260051b850101111562001f3057600080fd5b6020830197508096505062001f486020890162001e6a565b9450604088013591508082111562001f5f57600080fd5b5062001f6e8882890162001e77565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006060808301818452808651808352608092508286019150828160051b8701016020808a0160005b848110156200208057898403607f19018652815180516001600160a01b031685528381015189860190600381106200201c57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156200206a5783516001600160e01b03191682529286019260019290920191908601906200203e565b5097850197955050509082019060010162001fd4565b50506001600160a01b0389168882015250868103604088015260008152602081019998505050505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715620020da57620020da62001f7f565b604052919050565b60006020808385031215620020f657600080fd5b825167ffffffffffffffff808211156200210f57600080fd5b818501915085601f8301126200212457600080fd5b81518181111562002139576200213962001f7f565b8060051b91506200214c848301620020ae565b81815291830184019184810190888411156200216757600080fd5b938501935b83851015620021955784519250620021848362001e54565b82825293850193908501906200216c565b98975050505050505050565b600060208284031215620021b457600080fd5b8151801515811462001cc357600080fd5b600060208284031215620021d857600080fd5b5051919050565b600060208284031215620021f257600080fd5b815160ff8116811462001cc357600080fd5b60005b838110156200222157818101518382015260200162002207565b50506000910152565b600067ffffffffffffffff83111562002247576200224762001f7f565b6200225c601f8401601f1916602001620020ae565b90508281528383830111156200227157600080fd5b62001cc383602083018462002204565b6000602082840312156200229457600080fd5b815167ffffffffffffffff811115620022ac57600080fd5b8201601f81018413620022be57600080fd5b62001c06848251602084016200222a565b6001600160e01b0319831681528151600090620022f481600485016020870162002204565b919091016004019392505050565b600082516200231681846020870162002204565b9190910192915050565b600081518084526200233a81602086016020860162002204565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620023a757603f198886030184526200239485835162002320565b9450928501929085019060010162002375565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201620023df57620023df620023b4565b5060010190565b6040815260006200241160408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200241160408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200247560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262001c06818562002320565b6040815260006200247560408301600a815269080808081058dd1d585b60b21b602082015260400190565b80820180821115620018555762001855620023b4565b81810381811115620018555762001855620023b4565b8082028115828204841417620018555762001855620023b4565b600181815b808511156200253b5781600019048211156200251f576200251f620023b4565b808516156200252d57918102915b93841c9390800290620024ff565b509250929050565b600082620025545750600162001855565b81620025635750600062001855565b81600181146200257c57600281146200258757620025a7565b600191505062001855565b60ff8411156200259b576200259b620023b4565b50506001821b62001855565b5060208310610133831016604e8410600b8410161715620025cc575081810a62001855565b620025d88383620024fa565b8060001904821115620025ef57620025ef620023b4565b029392505050565b600062001cc3838362002543565b600081620026175762002617620023b4565b50600019019056fe608060405234801561001057600080fd5b506110db806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610bc5565b610045565b005b61004d61009e565b61009761005a8587610d0b565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020611086833981519152600401546001600160a01b031633146100d957604051630305808160e41b815260040160405180910390fd5b565b60005b83518110156102615760008482815181106100fb576100fb610e4f565b60200260200101516020015190506000600281111561011c5761011c610e65565b81600281111561012e5761012e610e65565b0361017c5761017785838151811061014857610148610e4f565b60200260200101516000015186848151811061016657610166610e4f565b6020026020010151604001516102ac565b61024e565b600181600281111561019057610190610e65565b036101d9576101778583815181106101aa576101aa610e4f565b6020026020010151600001518684815181106101c8576101c8610e4f565b6020026020010151604001516103ea565b60028160028111156101ed576101ed610e65565b036102365761017785838151811061020757610207610e4f565b60200260200101516000015186848151811061022557610225610e4f565b602002602001015160400151610533565b60405162c5e5d760e31b815260040160405180910390fd5b508061025981610e91565b9150506100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161029593929190610efa565b60405180910390a16102a78282610604565b505050565b60008151116102ce5760405163092d2fe560e41b815260040160405180910390fd5b6000805160206110868339815191526001600160a01b0383166103045760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361033a5761033a8285610710565b60005b835181101561009757600084828151811061035a5761035a610e4f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156103bc5760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6103c88583868a610761565b836103d281610ffa565b945050505080806103e290610e91565b91505061033d565b600081511161040c5760405163092d2fe560e41b815260040160405180910390fd5b6000805160206110868339815191526001600160a01b0383166104425760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610478576104788285610710565b60005b835181101561009757600084828151811061049857610498610e4f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036104fa57604051631c04188b60e31b81526001600160e01b0319831660048201526024016103b3565b610505858284610801565b6105118583868a610761565b8361051b81610ffa565b9450505050808061052b90610e91565b91505061047b565b60008151116105555760405163092d2fe560e41b815260040160405180910390fd5b6000805160206110868339815191526001600160a01b0383161561058c57604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156105fe5760008382815181106105ac576105ac610e4f565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166105e9848284610801565b505080806105f690610e91565b91505061058f565b50505050565b6001600160a01b038216610636578051156106325760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805160000361065857604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146106715761067182610b40565b600080836001600160a01b03168360405161068c9190611020565b600060405180830381855af49150503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b5091509150816105fe578051156106f7578060405162461bcd60e51b81526004016103b3919061103c565b604051633a18f8dd60e01b815260040160405180910390fd5b61071981610b40565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661083357604051622902d360e91b81526001600160e01b0319821660048201526024016103b3565b306001600160a01b038316036108685760405163069731c560e41b81526001600160e01b0319821660048201526024016103b3565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b031692916108b791611056565b90508082146109a9576001600160a01b038416600090815260018601602052604081208054839081106108ec576108ec610e4f565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811061093d5761093d610e4f565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b038416600090815260018601602052604090208054806109d2576109d261106f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610097576002850154600090610a3590600190611056565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ae4576000876002018381548110610a7457610a74610e4f565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610aa557610aa5610e4f565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610af757610af761106f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b8061063257604051633c11a9c560e21b815260040160405180910390fd5b80356001600160a01b0381168114610b7757600080fd5b919050565b60008083601f840112610b8e57600080fd5b50813567ffffffffffffffff811115610ba657600080fd5b602083019150836020828501011115610bbe57600080fd5b9250929050565b600080600080600060608688031215610bdd57600080fd5b853567ffffffffffffffff80821115610bf557600080fd5b818801915088601f830112610c0957600080fd5b813581811115610c1857600080fd5b8960208260051b8501011115610c2d57600080fd5b60208301975080965050610c4360208901610b60565b94506040880135915080821115610c5957600080fd5b50610c6688828901610b7c565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610cb057610cb0610c77565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdf57610cdf610c77565b604052919050565b600067ffffffffffffffff821115610d0157610d01610c77565b5060051b60200190565b6000610d1e610d1984610ce7565b610cb6565b83815260208082019190600586811b860136811115610d3c57600080fd5b865b81811015610e4257803567ffffffffffffffff80821115610d5f5760008081fd5b818a01915060608236031215610d755760008081fd5b610d7d610c8d565b610d8683610b60565b81528683013560038110610d9a5760008081fd5b8188015260408381013583811115610db25760008081fd5b939093019236601f850112610dc957600092508283fd5b83359250610dd9610d1984610ce7565b83815292871b84018801928881019036851115610df65760008081fd5b948901945b84861015610e2b5785356001600160e01b031981168114610e1c5760008081fd5b82529489019490890190610dfb565b918301919091525088525050948301948301610d3e565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ea357610ea3610e7b565b5060010190565b60005b83811015610ec5578181015183820152602001610ead565b50506000910152565b60008151808452610ee6816020860160208601610eaa565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610fca57898403607f19018652815180516001600160a01b03168552838101518986019060038110610f6957634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610fb55783516001600160e01b0319168252928601926001929092019190860190610f8b565b50978501979550505090820190600101610f23565b50506001600160a01b038a16908801528681036040880152610fec8189610ece565b9a9950505050505050505050565b60006001600160601b0380831681810361101657611016610e7b565b6001019392505050565b60008251611032818460208701610eaa565b9190910192915050565b60208152600061104f6020830184610ece565b9392505050565b8181038181111561106957611069610e7b565b92915050565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220da0c11f31cc2d384535b537c8c8c557b9f252a523989a54a5d562abb3ea9661264736f6c6343000815003360806040526040516200151738038062001517833981016040819052620000269162000ed2565b620000318562000156565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620000485750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b81600081518110620000bb57620000bb62000f7e565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b03881681529081016000815260200182815250826000815181106200010e576200010e62000f7e565b60200260200101819052506200013c82600060405180602001604052806000815250620001da60201b60201c565b62000149858585620003f0565b5050505050505062001308565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020620014f7833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b8351811015620003a1576000848281518110620001fe57620001fe62000f7e565b60200260200101516020015190506000600281111562000222576200022262000f94565b81600281111562000237576200023762000f94565b0362000295576200028f85838151811062000256576200025662000f7e565b60200260200101516000015186848151811062000277576200027762000f7e565b6020026020010151604001516200045860201b60201c565b6200038b565b6001816002811115620002ac57620002ac62000f94565b0362000304576200028f858381518110620002cb57620002cb62000f7e565b602002602001015160000151868481518110620002ec57620002ec62000f7e565b6020026020010151604001516200063960201b60201c565b60028160028111156200031b576200031b62000f94565b0362000373576200028f8583815181106200033a576200033a62000f7e565b6020026020010151600001518684815181106200035b576200035b62000f7e565b6020026020010151604001516200082160201b60201c565b60405162c5e5d760e31b815260040160405180910390fd5b5080620003988162000fc0565b915050620001dd565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051620003d7939291906200100a565b60405180910390a1620003eb8282620008fe565b505050565b600080516020620014f78339815191527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13256200042d85826200119f565b50600a81016200043e84826200119f565b50600b01805460ff191660ff929092169190911790555050565b60008151116200047b5760405163092d2fe560e41b815260040160405180910390fd5b600080516020620014f78339815191526001600160a01b038316620004b35760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003620004ec57620004ec828562000a18565b60005b83518110156200063257600084828151811062000510576200051062000f7e565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620005735760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558362000617816200126b565b94505050508080620006299062000fc0565b915050620004ef565b5050505050565b60008151116200065c5760405163092d2fe560e41b815260040160405180910390fd5b600080516020620014f78339815191526001600160a01b038316620006945760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003620006cd57620006cd828562000a18565b60005b835181101562000632576000848281518110620006f157620006f162000f7e565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036200075557604051631c04188b60e31b81526001600160e01b0319831660048201526024016200056a565b6200076285828462000a6b565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558362000806816200126b565b94505050508080620008189062000fc0565b915050620006d0565b6000815111620008445760405163092d2fe560e41b815260040160405180910390fd5b600080516020620014f78339815191526001600160a01b038316156200087d57604051631be65fe560e21b815260040160405180910390fd5b60005b8251811015620008f8576000838281518110620008a157620008a162000f7e565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316620008e084828462000a6b565b50508080620008ef9062000fc0565b91505062000880565b50505050565b6001600160a01b03821662000932578051156200092e5760405163c21b1ab760e01b815260040160405180910390fd5b5050565b80516000036200095557604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146200097157620009718262000dc7565b600080836001600160a01b0316836040516200098e91906200129c565b600060405180830381855af49150503d8060008114620009cb576040519150601f19603f3d011682016040523d82523d6000602084013e620009d0565b606091505b509150915081620008f857805115620009ff578060405162461bcd60e51b81526004016200056a9190620012ba565b604051633a18f8dd60e01b815260040160405180910390fd5b62000a238162000dc7565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b03821662000a9f57604051622902d360e91b81526001600160e01b0319821660048201526024016200056a565b306001600160a01b0383160362000ad65760405163069731c560e41b81526001600160e01b0319821660048201526024016200056a565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929162000b2791620012d6565b905080821462000c20576001600160a01b0384166000908152600186016020526040812080548390811062000b605762000b6062000f7e565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000bb45762000bb462000f7e565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384166000908152600186016020526040902080548062000c4c5762000c4c620012f2565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036200063257600285015460009062000cb290600190620012d6565b6001600160a01b038616600090815260018089016020526040909120015490915080821462000d6857600087600201838154811062000cf55762000cf562000f7e565b6000918252602090912001546002890180546001600160a01b03909216925082918490811062000d295762000d2962000f7e565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b8660020180548062000d7e5762000d7e620012f2565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b806200092e57604051633c11a9c560e21b815260040160405180910390fd5b80516001600160a01b038116811462000e0057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000e3857818101518382015260200162000e1e565b50506000910152565b600082601f83011262000e5357600080fd5b81516001600160401b038082111562000e705762000e7062000e05565b604051601f8301601f19908116603f0116810190828211818310171562000e9b5762000e9b62000e05565b8160405283815286602085880101111562000eb557600080fd5b62000ec884602083016020890162000e1b565b9695505050505050565b600080600080600060a0868803121562000eeb57600080fd5b62000ef68662000de8565b945062000f066020870162000de8565b60408701519094506001600160401b038082111562000f2457600080fd5b62000f3289838a0162000e41565b9450606088015191508082111562000f4957600080fd5b5062000f588882890162000e41565b925050608086015160ff8116811462000f7057600080fd5b809150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000fd55762000fd562000faa565b5060010190565b6000815180845262000ff681602086016020860162000e1b565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015620010df57898403607f19018652815180516001600160a01b031685528381015189860190600381106200107b57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015620010c95783516001600160e01b03191682529286019260019290920191908601906200109d565b5097850197955050509082019060010162001033565b50506001600160a01b038a1690880152868103604088015262001103818962000fdc565b9a9950505050505050505050565b600181811c908216806200112657607f821691505b6020821081036200114757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003eb57600081815260208120601f850160051c81016020861015620011765750805b601f850160051c820191505b81811015620011975782815560010162001182565b505050505050565b81516001600160401b03811115620011bb57620011bb62000e05565b620011d381620011cc845462001111565b846200114d565b602080601f8311600181146200120b5760008415620011f25750858301515b600019600386901b1c1916600185901b17855562001197565b600085815260208120601f198616915b828110156200123c578886015182559484019460019091019084016200121b565b50858210156200125b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001600160601b038281166002600160601b0319810162001292576200129262000faa565b6001019392505050565b60008251620012b081846020870162000e1b565b9190910192915050565b602081526000620012cf602083018462000fdc565b9392505050565b81810381811115620012ec57620012ec62000faa565b92915050565b634e487b7160e01b600052603160045260246000fd5b6101df80620013186000396000f3fe6080604052600436106100225760003560e01c806354353f2f146100e557610029565b3661002957005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b0316806100c15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604482015260640160405180910390fd5b3660008037600080366000845af43d6000803e8080156100e0573d6000f35b3d6000fd5b3480156100f157600080fd5b506100fa610110565b6040516101079190610130565b60405180910390f35b60606040518060600160405280602b815260200161017f602b9139905090565b600060208083528351808285015260005b8181101561015d57858101830151858201604001528201610141565b506000604082860101526040601f19601f830116850101925050509291505056fe5448495320495320414e204558414d504c45204f4620414e20494d4d555441424c452046554e4354494f4ea26469706673582212207eccc12c9f9615a361057d9fde81bbc7c1532858e09781d351a03f5fad9039b564736f6c63430008150033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c608060405234801561001057600080fd5b5061068e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100bd5780637a0ed627146100d2578063adfca15e146100e7578063cdffacc614610107575b600080fd5b6100a861006a366004610469565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100c561015f565b6040516100b4919061049a565b6100da6101d2565b6040516100b4919061052c565b6100fa6100f53660046105a9565b61039d565b6040516100b491906105d2565b610147610115366004610469565b6001600160e01b031916600090815260008051602061063983398151915260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100b4565b60606000600080516020610639833981519152600281018054604080516020808402820181019092528281529394508301828280156101c757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101a9575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610639833981519152908067ffffffffffffffff811115610220576102206105e5565b60405190808252806020026020018201604052801561026657816020015b60408051808201909152600081526060602082015281526020019060019003908161023e5790505b50925060005b8181101561039757600083600201828154811061028b5761028b6105fb565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102be576102be6105fb565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561035d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161031f5790505b5050505050858381518110610374576103746105fb565b60200260200101516020018190525050808061038f90610611565b91505061026c565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60209081526040918290208054835181840281018401909452808452606093600080516020610639833981519152939092919083018282801561045c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161041e5790505b5050505050915050919050565b60006020828403121561047b57600080fd5b81356001600160e01b03198116811461049357600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156104db5783516001600160a01b0316835292840192918401916001016104b6565b50909695505050505050565b600081518084526020808501945080840160005b838110156105215781516001600160e01b031916875295820195908201906001016104fb565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561059b57888303603f19018552815180516001600160a01b03168452870151878401879052610588878501826104e7565b9588019593505090860190600101610553565b509098975050505050505050565b6000602082840312156105bb57600080fd5b81356001600160a01b038116811461049357600080fd5b60208152600061049360208301846104e7565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161063157634e487b7160e01b600052601160045260246000fd5b506001019056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220035cc389980f7e84fed5fe2966ac016827ae22946cedbe435ea18e5439058e5d64736f6c63430008150033608060405234801561001057600080fd5b5061020a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461005f575b600080fd5b610043610074565b6040516001600160a01b03909116815260200160405180910390f35b61007261006d3660046101a4565b6100ac565b005b60006100a77fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b6100b46100c0565b6100bd8161010f565b50565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461010d57604051630305808160e41b815260040160405180910390fd5b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000602082840312156101b657600080fd5b81356001600160a01b03811681146101cd57600080fd5b939250505056fea26469706673582212206f5d1c61a22d9de0dbac37d8d1c14ed81e4f6a3556331369101225219b16c5af64736f6c63430008150033608060405234801561001057600080fd5b506108fb806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015c57806370a082311461017157806395d89b41146101a7578063a9059cbb146101af578063dd62ed3e146101c257600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd14610115578063313ce56714610128575b600080fd5b6100ab6101d5565b6040516100b89190610705565b60405180910390f35b6100d46100cf36600461076f565b610277565b60405190151581526020016100b8565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1323545b6040519081526020016100b8565b6100d4610123366004610799565b610291565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13275460405160ff90911681526020016100b8565b61016f61016a36600461076f565b6102b5565b005b61010761017f3660046107d5565b6001600160a01b031660009081526000805160206108a6833981519152602052604090205490565b6100ab6102cb565b6100d46101bd36600461076f565b6102ea565b6101076101d03660046107f7565b6102f8565b606060008051602061088683398151915260090180546101f49061082a565b80601f01602080910402602001604051908101604052809291908181526020018280546102209061082a565b801561026d5780601f106102425761010080835404028352916020019161026d565b820191906000526020600020905b81548152906001019060200180831161025057829003601f168201915b5050505050905090565b600033610285818585610342565b60019150505b92915050565b60003361029f858285610354565b6102aa8585856103bf565b506001949350505050565b6102bd61041e565b6102c7828261045b565b5050565b6060600080516020610886833981519152600a0180546101f49061082a565b6000336102858185856103bf565b6001600160a01b0391821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13226020908152604080832093909416825291909152205490565b61034f8383836001610491565b505050565b600061036084846102f8565b905060001981146103b957818110156103aa57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103b984848484036000610491565b50505050565b6001600160a01b0383166103e957604051634b637e8f60e11b8152600060048201526024016103a1565b6001600160a01b0382166104135760405163ec442f0560e01b8152600060048201526024016103a1565b61034f838383610585565b600080516020610886833981519152600401546001600160a01b0316331461045957604051630305808160e41b815260040160405180910390fd5b565b6001600160a01b0382166104855760405163ec442f0560e01b8152600060048201526024016103a1565b6102c760008383610585565b6001600160a01b0384166104bb5760405163e602df0560e01b8152600060048201526024016103a1565b6001600160a01b0383166104e557604051634a1406b160e11b8152600060048201526024016103a1565b6001600160a01b0384811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13226020908152604080832093871683529290522082905580156103b957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161057791815260200190565b60405180910390a350505050565b6001600160a01b0383166105c0578060008051602061088683398151915260070160008282546105b59190610864565b9091555061064c9050565b6001600160a01b03831660009081526000805160206108a68339815191526020526040902054818110156106205760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a1565b6001600160a01b03841660009081526000805160206108a6833981519152602052604090209082900390555b6001600160a01b038216610687577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1323805482900390556106b3565b6001600160a01b03821660009081526000805160206108a6833981519152602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106f891815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561073257858101830151858201604001528201610716565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076a57600080fd5b919050565b6000806040838503121561078257600080fd5b61078b83610753565b946020939093013593505050565b6000806000606084860312156107ae57600080fd5b6107b784610753565b92506107c560208501610753565b9150604084013590509250925092565b6000602082840312156107e757600080fd5b6107f082610753565b9392505050565b6000806040838503121561080a57600080fd5b61081383610753565b915061082160208401610753565b90509250929050565b600181811c9082168061083e57607f821691505b60208210810361085e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028b57634e487b7160e01b600052601160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131cc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1321a26469706673582212205e21ef61426debbbc502f8905d5b71f23fe9ada0c50a9df020b8c067151cb2c864736f6c63430008150033a26469706673582212209101e9a05f60750c4a1b189012490bb1a73139004060aa98b1ce79b35297c82764736f6c63430008150033",
    "sourceMap": "464:3321:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:1449;;;:::i;:::-;;2836:166;;;:::i;3639:144::-;;;;;;:::i;:::-;;;;;;;2583:85;;;:::i;3209:424::-;;;:::i;2493:84::-;;;:::i;2674:156::-;;;:::i;1819:584:15:-;;;:::i;:::-;;;1820:14:32;;1813:22;1795:41;;1783:2;1768:18;1819:584:15;;;;;;;2402:85:30;;;:::i;3008:195::-;;;:::i;2253:143::-;;;:::i;1572:26:15:-;;;;;;;;;798:1449:30;841:7;;832:28;;;-1:-1:-1;;;832:28:30;;-1:-1:-1;;;;;841:7:30;;;832:28;;;2310:51:32;2377:18;;;2370:30;2436:1;2416:18;;;2409:29;-1:-1:-1;;;2454:18:32;;;2447:37;832:8:30;;;;2501:19:32;;832:28:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;879:8:30;;870:30;;;-1:-1:-1;;;870:30:30;;-1:-1:-1;;;;;879:8:30;;;870:30;;;2743:51:32;2810:18;;;2803:30;2869:1;2849:18;;;2842:29;-1:-1:-1;;;2887:18:32;;;2880:38;870:8:30;;-1:-1:-1;870:8:30;;-1:-1:-1;2935:19:32;;870:30:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:9:30;:33;;-1:-1:-1;;;;;;934:33:30;-1:-1:-1;;;;;934:33:30;;;;;;;;;987:139;;1020:4;;934:33;1114:2;;987:139;;;:::i;:::-;-1:-1:-1;;;;;3397:15:32;;;3379:34;;3449:15;;;;3444:2;3429:18;;3422:43;3359:3;3496:2;3481:18;;3474:31;;;3542:1;3521:19;;;3514:30;-1:-1:-1;;;3575:3:32;3560:19;;3553:39;3628:3;3623:2;3608:18;;3601:31;;;3669:1;3648:19;;;3641:30;-1:-1:-1;;;3702:3:32;3687:19;;3680:34;3799:4;3787:17;3781:3;3766:19;;3759:46;3746:3;3731:19;987:139:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;977:7:30;:149;;-1:-1:-1;;;;;;977:149:30;-1:-1:-1;;;;;977:149:30;;;;;;;;;;1145:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1136:6:30;:32;;-1:-1:-1;;;;;;1136:32:30;-1:-1:-1;;;;;1136:32:30;;;;;;;;;;1187:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1178:6:30;:29;;-1:-1:-1;;;;;;1178:29:30;-1:-1:-1;;;;;1178:29:30;;;;;;;;;;1226:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1217:6:30;:20;;-1:-1:-1;;;;;;1217:20:30;;;-1:-1:-1;;;;;1217:20:30;;;;;;;1276:7;;1247:12;:38;;1276:7;;;;1247:38;;;;;1347:17;;;1362:1;1347:17;;;;;;;;;-1:-1:-1;;1347:17:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1347:17:30;;;;;;;;;;;;;;-1:-1:-1;1398:190:30;;;;;;;;;1447:6;;-1:-1:-1;;;;;1447:6:30;1398:190;;1323:41;;-1:-1:-1;1398:190:30;;;-1:-1:-1;1398:190:30;;;;1535:38;;;;;;;;;;;;;;-1:-1:-1;;;1535:38:30;;;:17;:38::i;:::-;1398:190;;;1375:3;1379:1;1375:6;;;;;;;;:::i;:::-;;;;;;;;;;;:223;;;;1632:187;;;;;;;;;1681:6;;-1:-1:-1;;;;;1681:6:30;1632:187;;;;;-1:-1:-1;1632:187:30;;;;1769:35;;;;;;;;;;;;;;-1:-1:-1;;;1769:35:30;;;:17;:35::i;:::-;1632:187;;;1609:3;1613:1;1609:6;;;;;;;;:::i;:::-;;;;;;;;;;;:220;;;;1863:178;;;;;;;;;1912:6;;-1:-1:-1;;;;;1912:6:30;1863:178;;;;;-1:-1:-1;1863:178:30;;;;2000:26;;;;;;;;;;;;;;-1:-1:-1;;;2000:26:30;;;:17;:26::i;:::-;1863:178;;;1840:3;1844:1;1840:6;;;;;;;;:::i;:::-;;;;;;;;;;:211;2108:7;;2088:63;;-1:-1:-1;;;2088:63:30;;-1:-1:-1;;;;;2108:7:30;;;;2088:40;;:63;;2129:3;;2108:7;;2088:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2214:7;;;;;;;;;-1:-1:-1;;;;;2214:7:30;-1:-1:-1;;;;;2188:50:30;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2188:52:30;;;;;;;;;;;;:::i;:::-;;822:1425;798:1449::o;2836:166::-;2887:12;;2908:7;;2887:35;;-1:-1:-1;;;2887:35:30;;-1:-1:-1;;;;;2908:7:30;;;2887:35;;;7866:51:32;2917:4:30;7933:18:32;;;7926:34;2876:47:30;;2887:12;;;;;:20;;7839:18:32;;2887:35:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2876:10;:47::i;:::-;2942:12;;2980:7;;2942:46;;-1:-1:-1;;;2942:46:30;;2973:4;2942:46;;;8465:34:32;-1:-1:-1;;;;;2980:7:30;;;8515:18:32;;;8508:43;2933:62:30;;2942:12;;;;;:22;;8400:18:32;;2942:46:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2990:4;2933:8;:62::i;:::-;2836:166::o;2583:85::-;2633:12;;:23;;;-1:-1:-1;;;2633:23:30;;;;2624:37;;-1:-1:-1;;;;;2633:12:30;;:21;;:23;;;;;;;;;;;;;;:12;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2624:37;;2658:2;2624:8;:37::i;3209:424::-;3256:10;:8;:10::i;:::-;3285:7;;3276:17;;-1:-1:-1;;;3276:17:30;;-1:-1:-1;;;;;3285:7:30;;;3276:17;;;9175:51:32;3276:8:30;;;;9148:18:32;;3276:17:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3303:12:30;;:41;;-1:-1:-1;;;3303:41:30;;3332:4;3303:41;;;7866:51:32;3339:4:30;7933:18:32;;;7926:34;-1:-1:-1;;;;;3303:12:30;;;;-1:-1:-1;3303:20:30;;-1:-1:-1;7839:18:32;;3303:41:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3365:12:30;;3391:7;;3400:8;;3365:52;;-1:-1:-1;;;3365:52:30;;-1:-1:-1;;;;;3391:7:30;;;3365:52;;;9502:34:32;3400:8:30;;;9552:18:32;;;9545:43;3410:6:30;9604:18:32;;;9597:34;3354:64:30;;3365:12;;;;;:25;;9437:18:32;;3365:52:30;9237:400:32;3354:64:30;3437:12;;3460:7;;3437:46;;-1:-1:-1;;;3437:46:30;;-1:-1:-1;;;;;3460:7:30;;;3437:46;;;8465:34:32;3477:4:30;8515:18:32;;;8508:43;3428:71:30;;3437:12;;;;;:22;;8400:18:32;;3437:46:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3485:13;3428:8;:71::i;:::-;3518:12;;3541:7;;3518:31;;-1:-1:-1;;;3518:31:30;;-1:-1:-1;;;;;3541:7:30;;;3518:31;;;9175:51:32;3509:57:30;;3518:12;;;;;:22;;9148:18:32;;3518:31:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3551:14;3509:8;:57::i;:::-;3585:12;;3608:8;;3585:32;;-1:-1:-1;;;3585:32:30;;-1:-1:-1;;;;;3608:8:30;;;3585:32;;;9175:51:32;3576:50:30;;3585:12;;;;;:22;;9148:18:32;;3585:32:30;9029:203:32;2493:84:30;2532:38;;;;;;;;;;;-1:-1:-1;;;2532:38:30;;;;2548:12;;:21;;-1:-1:-1;;;2548:21:30;;;;2532:38;;-1:-1:-1;;;;;2548:12:30;;;;:19;;:21;;;;;-1:-1:-1;;2548:21:30;;;;;;;:12;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2548:21:30;;;;;;;;;;;;:::i;:::-;2532:8;:38::i;2674:156::-;2711:12;;2729:7;;2711:33;;-1:-1:-1;;;2711:33:30;;-1:-1:-1;;;;;2729:7:30;;;2711:33;;;7866:51:32;2738:5:30;7933:18:32;;;7926:34;2711:12:30;;;:17;;7839:18:32;;2711:33:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:69;2763:12;;;;;;;;;-1:-1:-1;;;;;2763:12:30;-1:-1:-1;;;;;2763:24:30;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2791:12;;2814:7;;2791:31;;-1:-1:-1;;;2791:31:30;;-1:-1:-1;;;;;2814:7:30;;;2791:31;;;9175:51:32;2791:12:30;;;:22;;9148:18:32;;2791:31:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2754:8;:69::i;1819:584:15:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:15;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;7866:51:32;;;-1:-1:-1;;;7933:18:32;;;7926:34;2196:43:15;;;;;;;;;7839:18:32;;;2196:43:15;;;-1:-1:-1;;1671:64:15;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:15;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:15:o;2402:85:30:-;2448:12;;:19;;;-1:-1:-1;;;2448:19:30;;;;2439:41;;-1:-1:-1;;;;;2448:12:30;;:17;;:19;;;;;:12;;:19;;;;;;;:12;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2448:19:30;;;;;;;;;;;;:::i;:::-;2439:41;;;;;;;;;;;;;-1:-1:-1;;;2439:41:30;;;:8;:41::i;3008:195::-;3049:10;:8;:10::i;:::-;3083:7;;3069:22;;-1:-1:-1;;;3069:22:30;;-1:-1:-1;;;;;3083:7:30;;;3069:22;;;9175:51:32;3069:13:30;;;;9148:18:32;;3069:22:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3101:12:30;;3123:8;;3101:37;;-1:-1:-1;;;3101:37:30;;-1:-1:-1;;;;;3123:8:30;;;3101:37;;;7866:51:32;3133:4:30;7933:18:32;;;7926:34;3101:12:30;;;-1:-1:-1;3101:21:30;;-1:-1:-1;7839:18:32;;3101:37:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3157:12:30;;3180:8;;3157:32;;-1:-1:-1;;;3157:32:30;;-1:-1:-1;;;;;3180:8:30;;;3157:32;;;9175:51:32;3148:48:30;;3157:12;;;;;:22;;9148:18:32;;3157:32:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3191:4;3148:8;:48::i;2253:143::-;2293:51;;-1:-1:-1;;;2293:51:30;;12514:2:32;2293:51:30;;;12496:21:32;;;12533:18;;;12526:30;12592:34;12572:18;;;12565:62;2293:15:30;;;;12644:18:32;;2293:51:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:7;;;;;;;;;-1:-1:-1;;;;;2369:7:30;-1:-1:-1;;;;;2354:33:30;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2253:143::o;202:1397:31:-;373:15;;;386:1;373:15;;;;;;;;;273:25;;351:19;;373:15;;;;;;;;;;;;;;;;;;;;;351:37;;398:16;;;;;;;;;;;;;-1:-1:-1;;;398:16:31;;;:3;402:1;398:6;;;;;;;;:::i;:::-;;;;;;:16;;;;424:18;;;;;;;;;;;;;-1:-1:-1;;;424:18:31;;;:3;428:1;424:6;;;;;;;;:::i;:::-;;;;;;:18;;;;461:10;452:3;456:1;452:6;;;;;;;;:::i;:::-;;;;;;:19;;;;481:18;;;;;;;;;;;;;-1:-1:-1;;;481:18:31;;;:3;485:1;481:6;;;;;;;;:::i;:::-;;;;;;;;;;:18;528:11;;-1:-1:-1;;;528:11:31;;509:16;;528:6;;;;:11;;535:3;;528:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;528:11:31;;;;;;;;;;;;:::i;:::-;509:30;-1:-1:-1;509:30:31;549:16;687:12;509:30;687:10;:12::i;:::-;662:37;;745:23;771:14;:12;;;;;;;;;;;;;-1:-1:-1;;;771:12:31;;;;:14::i;:::-;745:40;;795:26;824:17;:15;;;;;;;;;;;;;-1:-1:-1;;;824:15:31;;;;:17::i;:::-;795:46;;851:62;858:17;:1;869:5;858:10;:17::i;:::-;851:62;;;891:11;:1;899:2;891:7;:11::i;:::-;;851:62;;;923:26;952:13;:11;;;;;;;;;;;;;-1:-1:-1;;;952:11:31;;;;:13::i;:::-;923:42;;975:26;1004:13;:11;;;;;;;;;;;;;-1:-1:-1;;;1004:11:31;;;;:13::i;:::-;975:42;;1027:28;1058:13;:11;;;;;;;;;;;;;-1:-1:-1;;;1058:11:31;;;;:13::i;:::-;1027:44;-1:-1:-1;1107:14:31;:1;1115:5;1107:7;:14::i;:::-;1093:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1093:30:31;;1081:42;;1139:9;1134:433;1158:9;:16;1154:1;:20;1134:433;;;1195:16;:1;1203:7;1195;:16::i;:::-;-1:-1:-1;1340:27:31;1370:29;1391:7;1370:14;:1;1378:5;1370:7;:14::i;:::-;:20;;:29::i;:::-;11887:11:29;;11881:2;11871:13;;11865:20;11855:44;1340:59:31;;-1:-1:-1;1413:9:31;1423:1;1413:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1413:38:31;;;:12;;;;;;;;;;;:38;1465:28;1496:29;1517:7;1496:14;:1;1504:5;1496:7;:14::i;:29::-;1465:60;;1181:386;;1176:3;;;;;:::i;:::-;;;;1134:433;;;;1576:16;;;;;;;;;202:1397;;;:::o;3255:157:15:-;3315:9;3310:96;;3345:30;;;;;14694:2:32;14676:21;;;14733:2;14713:18;;;14706:30;14772:25;14767:2;14752:18;;14745:53;14830:2;14815:18;;14492:347;3345:30:15;;;;;;;;3389:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;15046:2:32;15028:21;;;15085:2;15065:18;;;15058:30;15124:34;15119:2;15104:18;;15097:62;-1:-1:-1;;;15190:2:32;15175:18;;15168:32;15232:3;15217:19;;14844:398;5286:41:15;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;14688:344::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;16777:2:32;16759:21;;;16816:2;16796:18;;;16789:30;16855:34;16850:2;16835:18;;16828:62;-1:-1:-1;;;16921:2:32;16906:18;;16899:34;16965:3;16950:19;;16575:400;14848:43:15;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;2919:210:29:-;-1:-1:-1;;;;;;;;;;;;;;;;;3092:30:29;;;;;;;;3098:18;;3092:30;;3051:15;;;3092:30;;;;;;;;2919:210::o;23812:180::-;23976:9;;;;;23925;;23947:11;;23960;;;;23893:4;;23916:56;;23925:9;23976;;23947:11;23916:8;:56::i;:::-;:69;;23909:76;;23812:180;;;;;:::o;21223:141::-;-1:-1:-1;;;;;;;;;;;;;;;;;21331:26:29;21337:4;21343:6;21351:5;21331;:26::i;:::-;;21223:141;;;;:::o;23209:364::-;23287:8;23307;23376:6;:11;;;23318:55;23326:4;:9;;;23337:4;:9;;;23348:6;:11;;;23361:6;:11;;;23318:7;:55::i;:::-;:69;;;;:::i;:::-;23307:80;;23397:170;23423:9;;23411;;;;:21;;23423:9;23411:21;:::i;:::-;23404:3;:28;23397:170;;23448:5;;;;:::i;:::-;;;;23545:6;:11;;;23473:69;23500:4;:9;;;23494:3;:15;;;;:::i;:::-;23481:9;;:29;;;;:::i;:::-;23512:3;23517:6;:11;;;23530:6;:11;;;23473:7;:69::i;:::-;:83;;;;:::i;:::-;23467:89;;23397:170;;14709:626;-1:-1:-1;;;;;;;;;;;;;;;;;14827:11:29;;14815:9;;:23;14811:65;;;-1:-1:-1;14861:4:29;14854:11;;14811:65;14925:11;;14913:9;;14901;;;;14886:12;;14925:11;14901:21;;;:::i;:::-;:35;;;;:::i;:::-;14988:11;;;;14886:50;;-1:-1:-1;14959:4:29;;14977:22;;14973:264;;-1:-1:-1;15056:13:29;;15121:4;15109:17;;15103:24;15184:28;;;15156:26;;;15153:60;14973:264;15251:5;15247:60;;;15285:11;;15272:24;;:4;;:24;;15285:11;;15272:24;:::i;:::-;;;-1:-1:-1;15247:60:29;-1:-1:-1;15324:4:29;;14709:626;-1:-1:-1;;;14709:626:29:o;2410:424:15:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;18335:51:32;;;-1:-1:-1;;;18402:18:32;;;18395:34;;;;2705:4:15;18445:18:32;;;18438:34;2482:11:15;;1671:64;2579:43;;18308:18:32;;2645:67:15;;;-1:-1:-1;;2645:67:15;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:15;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:15;2813:7;:14;;-1:-1:-1;;2813:14:15;;;;;2410:424::o;17098:1457:29:-;17198:4;17214:8;17250:7;17237:9;:20;17233:1292;;17290:2;17277:9;:15;17273:1242;;17312:12;17346:13;;17342:110;;17430:1;17411:14;17416:9;17411:2;:14;:::i;:::-;17406:20;;:1;:20;:::i;:::-;17400:27;;:1;:27;:::i;:::-;:31;;;;:::i;:::-;17398:34;;-1:-1:-1;17342:110:29;17535:16;;17531:27;;17604:9;17584:17;17594:7;17584;:17;:::i;:::-;:29;;;;:::i;:::-;17690:10;;17578:35;;-1:-1:-1;17686:21:29;;17727:222;17745:10;17734:7;:21;17727:222;;17790:7;17783:3;:14;17779:58;;17830:7;17823:14;;;;;;;;17779:58;17859:5;;;;:::i;:::-;;;;17924:4;17918:3;17912:10;17908:21;17897:32;;17727:222;;;17973:15;17979:9;17973:3;:15;:::i;:::-;17966:22;;;;;;;;17273:1242;18125:31;;;18192:19;18146:9;18192:7;:19;:::i;:::-;18181:31;;:7;:31;:::i;:::-;18175:37;;18230:271;18244:7;18237:3;:14;18230:271;;18336:25;;;18388:16;;;18384:68;;18437:15;18443:9;18437:3;:15;:::i;:::-;18430:22;;;;;;;18384:68;18474:8;18481:1;18474:8;;:::i;:::-;;;18253:248;18230:271;;;18009:506;17273:1242;18541:7;18534:14;;;17098:1457;;;;;;;:::o;20248:504::-;-1:-1:-1;;;;;;;;;;;;;;;;;20370:8:29;20381:55;20389:4;:9;;;20400:4;:9;;;20411:6;:11;;;20424:6;:11;;;20381:7;:55::i;:::-;20459:9;;;;;;20446:10;;;:22;;;;20497:9;20370:66;;-1:-1:-1;20491:15:29;;20370:66;20491:15;:::i;:::-;20478:28;;20539:9;;20527;;;;:21;;20539:9;20527:21;:::i;:::-;20520:3;:28;20516:208;;20601:1;20589:13;;20516:208;;;20659:11;;20646:10;;:24;;20659:11;20646:24;:::i;:::-;20633:37;;:4;;:37;;;;;:::i;:::-;;;-1:-1:-1;20702:11:29;;20696:17;;:3;:17;:::i;:::-;20684:9;;;:29;20516:208;20740:5;20733:12;;;20248:504;;;;;;:::o;15492:1453::-;15591:4;15618:7;15591:4;15658:20;;;15654:1251;;15711:2;15698:9;:15;15694:1201;;15733:12;15767:13;;15763:110;;15851:1;15832:14;15837:9;15832:2;:14;:::i;:::-;15827:20;;:1;:20;:::i;:::-;15821:27;;:1;:27;:::i;:::-;:31;;;;:::i;:::-;15819:34;;-1:-1:-1;15763:110:29;15956:16;;15952:27;;15891:18;16030:9;16010:17;16020:7;16010;:17;:::i;:::-;:29;;;;:::i;:::-;16116:10;;15999:40;;-1:-1:-1;16112:21:29;;16153:228;16171:10;16160:7;:21;16153:228;;16216:3;16209;:10;16205:64;;16252:17;16262:7;16252;:17;:::i;:::-;16245:24;;;;;;;;;;16205:64;16291:5;;;;:::i;:::-;;;;16356:4;16350:3;16344:10;16340:21;16329:32;;16153:228;;;16405:3;16398:10;;;;;;;;;;15694:1201;-1:-1:-1;16545:31:29;;;16496:12;;16596:285;16617:19;16627:9;16617:7;:19;:::i;:::-;16610:3;:26;16596:285;;16728:25;;;16780:16;;;16776:56;;16829:3;16822:10;;;;;;;;16776:56;16854:8;16861:1;16854:8;;:::i;:::-;;;16645:236;16638:5;;;;;:::i;:::-;;;;16596:285;;;16429:466;15694:1201;16921:17;16931:7;16921;:17;:::i;:::-;16914:24;15492:1453;-1:-1:-1;;;;;;;15492:1453:29:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:131:32:-;-1:-1:-1;;;;;89:31:32;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;289:347::-;340:8;350:6;404:3;397:4;389:6;385:17;381:27;371:55;;422:1;419;412:12;371:55;-1:-1:-1;445:20:32;;488:18;477:30;;474:50;;;520:1;517;510:12;474:50;557:4;549:6;545:17;533:29;;609:3;602:4;593:6;585;581:19;577:30;574:39;571:59;;;626:1;623;616:12;571:59;289:347;;;;;:::o;641:1009::-;783:6;791;799;807;815;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;924:9;911:23;953:18;994:2;986:6;983:14;980:34;;;1010:1;1007;1000:12;980:34;1048:6;1037:9;1033:22;1023:32;;1093:7;1086:4;1082:2;1078:13;1074:27;1064:55;;1115:1;1112;1105:12;1064:55;1155:2;1142:16;1181:2;1173:6;1170:14;1167:34;;;1197:1;1194;1187:12;1167:34;1252:7;1245:4;1235:6;1232:1;1228:14;1224:2;1220:23;1216:34;1213:47;1210:67;;;1273:1;1270;1263:12;1210:67;1304:4;1300:2;1296:13;1286:23;;1328:6;1318:16;;;1353:40;1387:4;1376:9;1372:20;1353:40;:::i;:::-;1343:50;;1446:2;1435:9;1431:18;1418:32;1402:48;;1475:2;1465:8;1462:16;1459:36;;;1491:1;1488;1481:12;1459:36;;1530:60;1582:7;1571:8;1560:9;1556:24;1530:60;:::i;:::-;641:1009;;;;-1:-1:-1;641:1009:32;;-1:-1:-1;1609:8:32;;1504:86;641:1009;-1:-1:-1;;;641:1009:32:o;3816:127::-;3877:10;3872:3;3868:20;3865:1;3858:31;3908:4;3905:1;3898:15;3932:4;3929:1;3922:15;4080:127;4141:10;4136:3;4132:20;4129:1;4122:31;4172:4;4169:1;4162:15;4196:4;4193:1;4186:15;4212:2153;4532:4;4561:2;4601;4590:9;4586:18;4631:2;4620:9;4613:21;4654:6;4689;4683:13;4720:6;4712;4705:22;4746:3;4736:13;;4780:2;4769:9;4765:18;4758:25;;4842:2;4832:6;4829:1;4825:14;4814:9;4810:30;4806:39;4864:4;4903:2;4895:6;4891:15;4924:1;4934:1249;4948:6;4945:1;4942:13;4934:1249;;;5013:22;;;-1:-1:-1;;5009:37:32;4997:50;;5070:13;;5157:9;;-1:-1:-1;;;;;5153:35:32;5138:51;;5228:11;;;5222:18;5110:15;;;;5280:1;5263:19;;5253:170;;5333:10;5328:3;5324:20;5321:1;5314:31;5372:4;5369:1;5362:15;5404:4;5401:1;5394:15;5253:170;5443:15;;;5436:37;5496:4;5541:11;;;5535:18;5573:15;;;5566:27;;;5654:21;;5688:24;;;;5778:23;;;;-1:-1:-1;;5734:15:32;;;;5839:236;5855:8;5850:3;5847:17;5839:236;;;5936:15;;-1:-1:-1;;;;;;5932:42:32;5918:57;;6044:17;;;;5883:1;5874:11;;;;;6001:14;;;;5839:236;;;-1:-1:-1;6161:12:32;;;;6098:5;-1:-1:-1;;;6126:15:32;;;;4970:1;4963:9;4934:1249;;;-1:-1:-1;;;;;;;1913:31:32;;6219:18;;;1901:44;-1:-1:-1;6276:22:32;;;6269:4;6254:20;;6247:52;2047:1;2035:14;;2082:4;2073:14;;6308:51;4212:2153;-1:-1:-1;;;;;;;;;4212:2153:32:o;6370:275::-;6441:2;6435:9;6506:2;6487:13;;-1:-1:-1;;6483:27:32;6471:40;;6541:18;6526:34;;6562:22;;;6523:62;6520:88;;;6588:18;;:::i;:::-;6624:2;6617:22;6370:275;;-1:-1:-1;6370:275:32:o;6650:1011::-;6745:6;6776:2;6819;6807:9;6798:7;6794:23;6790:32;6787:52;;;6835:1;6832;6825:12;6787:52;6868:9;6862:16;6897:18;6938:2;6930:6;6927:14;6924:34;;;6954:1;6951;6944:12;6924:34;6992:6;6981:9;6977:22;6967:32;;7037:7;7030:4;7026:2;7022:13;7018:27;7008:55;;7059:1;7056;7049:12;7008:55;7088:2;7082:9;7110:2;7106;7103:10;7100:36;;;7116:18;;:::i;:::-;7162:2;7159:1;7155:10;7145:20;;7185:28;7209:2;7205;7201:11;7185:28;:::i;:::-;7247:15;;;7317:11;;;7313:20;;;7278:12;;;;7345:19;;;7342:39;;;7377:1;7374;7367:12;7342:39;7401:11;;;;7421:210;7437:6;7432:3;7429:15;7421:210;;;7510:3;7504:10;7491:23;;7527:31;7552:5;7527:31;:::i;:::-;7571:18;;;7454:12;;;;7609;;;;7421:210;;;7650:5;6650:1011;-1:-1:-1;;;;;;;;6650:1011:32:o;7971:277::-;8038:6;8091:2;8079:9;8070:7;8066:23;8062:32;8059:52;;;8107:1;8104;8097:12;8059:52;8139:9;8133:16;8192:5;8185:13;8178:21;8171:5;8168:32;8158:60;;8214:1;8211;8204:12;8562:184;8632:6;8685:2;8673:9;8664:7;8660:23;8656:32;8653:52;;;8701:1;8698;8691:12;8653:52;-1:-1:-1;8724:16:32;;8562:184;-1:-1:-1;8562:184:32:o;8751:273::-;8819:6;8872:2;8860:9;8851:7;8847:23;8843:32;8840:52;;;8888:1;8885;8878:12;8840:52;8920:9;8914:16;8970:4;8963:5;8959:16;8952:5;8949:27;8939:55;;8990:1;8987;8980:12;9642:250;9727:1;9737:113;9751:6;9748:1;9745:13;9737:113;;;9827:11;;;9821:18;9808:11;;;9801:39;9773:2;9766:10;9737:113;;;-1:-1:-1;;9884:1:32;9866:16;;9859:27;9642:250::o;9897:391::-;9973:5;10007:18;9999:6;9996:30;9993:56;;;10029:18;;:::i;:::-;10067:57;10112:2;10091:15;;-1:-1:-1;;10087:29:32;10118:4;10083:40;10067:57;:::i;:::-;10058:66;;10147:6;10140:5;10133:21;10187:3;10178:6;10173:3;10169:16;10166:25;10163:45;;;10204:1;10201;10194:12;10163:45;10217:65;10275:6;10268:4;10261:5;10257:16;10252:3;10217:65;:::i;10293:459::-;10373:6;10426:2;10414:9;10405:7;10401:23;10397:32;10394:52;;;10442:1;10439;10432:12;10394:52;10475:9;10469:16;10508:18;10500:6;10497:30;10494:50;;;10540:1;10537;10530:12;10494:50;10563:22;;10616:4;10608:13;;10604:27;-1:-1:-1;10594:55:32;;10645:1;10642;10635:12;10594:55;10668:78;10738:7;10733:2;10727:9;10722:2;10718;10714:11;10668:78;:::i;11342:384::-;-1:-1:-1;;;;;;11527:33:32;;11515:46;;11584:13;;11497:3;;11606:74;11584:13;11669:1;11660:11;;11653:4;11641:17;;11606:74;:::i;:::-;11700:16;;;;11718:1;11696:24;;11342:384;-1:-1:-1;;;11342:384:32:o;11731:287::-;11860:3;11898:6;11892:13;11914:66;11973:6;11968:3;11961:4;11953:6;11949:17;11914:66;:::i;:::-;11996:16;;;;;11731:287;-1:-1:-1;;11731:287:32:o;12673:271::-;12715:3;12753:5;12747:12;12780:6;12775:3;12768:19;12796:76;12865:6;12858:4;12853:3;12849:14;12842:4;12835:5;12831:16;12796:76;:::i;:::-;12926:2;12905:15;-1:-1:-1;;12901:29:32;12892:39;;;;12933:4;12888:50;;12673:271;-1:-1:-1;;12673:271:32:o;12949:803::-;13111:4;13140:2;13180;13169:9;13165:18;13210:2;13199:9;13192:21;13233:6;13268;13262:13;13299:6;13291;13284:22;13337:2;13326:9;13322:18;13315:25;;13399:2;13389:6;13386:1;13382:14;13371:9;13367:30;13363:39;13349:53;;13437:2;13429:6;13425:15;13458:1;13468:255;13482:6;13479:1;13476:13;13468:255;;;13575:2;13571:7;13559:9;13551:6;13547:22;13543:36;13538:3;13531:49;13603:40;13636:6;13627;13621:13;13603:40;:::i;:::-;13593:50;-1:-1:-1;13701:12:32;;;;13666:15;;;;13504:1;13497:9;13468:255;;;-1:-1:-1;13740:6:32;;12949:803;-1:-1:-1;;;;;;;12949:803:32:o;14220:127::-;14281:10;14276:3;14272:20;14269:1;14262:31;14312:4;14309:1;14302:15;14336:4;14333:1;14326:15;14352:135;14391:3;14412:17;;;14409:43;;14432:18;;:::i;:::-;-1:-1:-1;14479:1:32;14468:13;;14352:135::o;15411:348::-;15641:2;15630:9;15623:21;15604:4;15661:49;15706:2;15695:9;15691:18;15324:2;15312:15;;-1:-1:-1;;;15352:4:32;15343:14;;15336:36;15397:2;15388:12;;15247:159;15661:49;15653:57;;15746:6;15741:2;15730:9;15726:18;15719:34;15411:348;;;;:::o;15928:::-;16158:2;16147:9;16140:21;16121:4;16178:49;16223:2;16212:9;16208:18;15841:2;15829:15;;-1:-1:-1;;;15869:4:32;15860:14;;15853:36;15914:2;15905:12;;15764:159;16980:440;17230:2;17219:9;17212:21;17193:4;17256:49;17301:2;17290:9;17286:18;15324:2;15312:15;;-1:-1:-1;;;15352:4:32;15343:14;;15336:36;15397:2;15388:12;;15247:159;17256:49;17353:9;17345:6;17341:22;17336:2;17325:9;17321:18;17314:50;17381:33;17407:6;17399;17381:33;:::i;17425:440::-;17675:2;17664:9;17657:21;17638:4;17701:49;17746:2;17735:9;17731:18;15841:2;15829:15;;-1:-1:-1;;;15869:4:32;15860:14;;15853:36;15914:2;15905:12;;15764:159;17870:125;17935:9;;;17956:10;;;17953:36;;;17969:18;;:::i;18000:128::-;18067:9;;;18088:11;;;18085:37;;;18102:18;;:::i;18483:168::-;18556:9;;;18587;;18604:15;;;18598:22;;18584:37;18574:71;;18625:18;;:::i;18656:422::-;18745:1;18788:5;18745:1;18802:270;18823:7;18813:8;18810:21;18802:270;;;18882:4;18878:1;18874:6;18870:17;18864:4;18861:27;18858:53;;;18891:18;;:::i;:::-;18941:7;18931:8;18927:22;18924:55;;;18961:16;;;;18924:55;19040:22;;;;19000:15;;;;18802:270;;;18806:3;18656:422;;;;;:::o;19083:806::-;19132:5;19162:8;19152:80;;-1:-1:-1;19203:1:32;19217:5;;19152:80;19251:4;19241:76;;-1:-1:-1;19288:1:32;19302:5;;19241:76;19333:4;19351:1;19346:59;;;;19419:1;19414:130;;;;19326:218;;19346:59;19376:1;19367:10;;19390:5;;;19414:130;19451:3;19441:8;19438:17;19435:43;;;19458:18;;:::i;:::-;-1:-1:-1;;19514:1:32;19500:16;;19529:5;;19326:218;;19628:2;19618:8;19615:16;19609:3;19603:4;19600:13;19596:36;19590:2;19580:8;19577:16;19572:2;19566:4;19563:12;19559:35;19556:77;19553:159;;;-1:-1:-1;19665:19:32;;;19697:5;;19553:159;19744:34;19769:8;19763:4;19744:34;:::i;:::-;19814:6;19810:1;19806:6;19802:19;19793:7;19790:32;19787:58;;;19825:18;;:::i;:::-;19863:20;;19083:806;-1:-1:-1;;;19083:806:32:o;19894:131::-;19954:5;19983:36;20010:8;20004:4;19983:36;:::i;20030:136::-;20069:3;20097:5;20087:39;;20106:18;;:::i;:::-;-1:-1:-1;;;20142:18:32;;20030:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testApprove()": "1aeb10a6",
    "testDecimals()": "5d4696cf",
    "testInvalid()": "d9000ef3",
    "testMint()": "9642ddaf",
    "testName()": "cc8668de",
    "testSymbol()": "77fc70c6",
    "testTransfer()": "d591221f",
    "testTransferFrom()": "70557298"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInvalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/deployDiamond.t.sol\":\"DiamondDeployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/src/\"]},\"sources\":{\"contracts/Diamond.sol\":{\"keccak256\":\"0x150e3e359ec6189dc17dc27f0b4c3351a17144992e89fcf0d1a9b33a9e5098b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b103aba2158b202f827433b5428aa746d523c1b54d229eb09ad91896ee73eb01\",\"dweb:/ipfs/QmdUG38VKUEYKFYBrXFY4vwifpNMN6zFmhJGTr3NDo9oY8\"]},\"contracts/facets/DiamondCutFacet.sol\":{\"keccak256\":\"0x4ca051570507ad7b50ea2e722d9060809314b15ffa23a91948d2dbd6b521db89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b3b10e502a2b11c0f7fef4b4e4ae9de10c10faadf3d85825a2bc1766d1aeb5f\",\"dweb:/ipfs/QmaxaiYYEvjbWDxBTi8W3TnVhU1pmNkVegpLMwovBmYDsG\"]},\"contracts/facets/DiamondLoupeFacet.sol\":{\"keccak256\":\"0x28838679164b5363e0762a1e26271ce99a3e8b1e1562f92d429716a6fe87ce77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b7a2738db9f9ee99b7baf9cba08f7af9720b235c09e21859e50eaeb2a458fd\",\"dweb:/ipfs/QmTFDxH1BkxuiBHY4bcTWwNv4XVQaGHEhf74DrBi2WefhB\"]},\"contracts/facets/ERC20Facet.sol\":{\"keccak256\":\"0x74ceca395aa712d6942ce60f27ccf6e8b55a9ed571e8ca36b8a7f2010dee6a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccd739d858d13d6f5c5c849a2c760f84960ad394d82c5997c44c34acf87be56f\",\"dweb:/ipfs/QmVUStwgM2YEScBZqvNtLtf3cyx6Sfhxubdwvyasg4uRi7\"]},\"contracts/facets/OwnershipFacet.sol\":{\"keccak256\":\"0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097\",\"dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119d9a5acd99b9462a8341c9b95ddd468648799eefa47038f81521431743c1ae\",\"dweb:/ipfs/QmTF7WNyPWTUtUzNcpq5rf5v2uw5TwzqsSg9D53pfQufcu\"]},\"contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45\",\"dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x96b5a2b087e7bdf702d056fb1b9f6fd61088f1b1d5b49e97493ad46e9d0984f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6867fdb53506b4ba7ede7588cab26a94759026f70f2ca681b1e0f8fc8ba897b3\",\"dweb:/ipfs/QmbHHjotcmTL8ET4BCMiU5Fq8jydVVbuctjCFeRB1LBqt4\"]},\"contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x537c55e709758a23b3981bc811a364899e45e29794b499a2c2e1db9f29a6168c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0c3e0e656afe57189f23fdd2c6963da3f696194ac99199b095ad38113a92a5f\",\"dweb:/ipfs/QmYFpgV9ZhXrEJZ2tKtCsUL7815HsQuTufFx7GHBNkXrdK\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223\",\"urls\":[\"bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669\",\"dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar\"]},\"test/deployDiamond.t.sol\":{\"keccak256\":\"0xcfa492a9029511a3e2c7cd9c15888e3a78af3b5165b5a13815890e9a4efc368e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc9fb9676a218a82a024e9727ef33f3c2d3e056afc2c4b9ffb6afdc815fc42bb\",\"dweb:/ipfs/QmZo6aQ6QhiiyF2bDY5jQKSQXKfqrVp4bjbT9QothLZo8E\"]},\"test/helpers/DiamondUtils.sol\":{\"keccak256\":\"0x074a057ec45684c7714aa93053ebbda31e8cba3a2d2d1adcca9c8b215b7666e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4ccbca56e35b08c6493a82db32cfd4dda2d3ef93eaa4a89f813fcb441591bd\",\"dweb:/ipfs/QmeohoDBBrkfR8zfLqsPtEfRbhcZacBzsZ47imdk9NKPoS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "diamondCut"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDecimals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInvalid"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testName"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSymbol"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "params": {
              "_calldata": "A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init",
              "_diamondCut": "Contains the facet addresses and function selectors",
              "_init": "The address of the contract or facet to execute _calldata"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "notice": "Add/replace/remove any number of functions and optionally execute         a function with delegatecall"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solidity-stringutils/=lib/solidity-stringutils/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/deployDiamond.t.sol": "DiamondDeployer"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Diamond.sol": {
        "keccak256": "0x150e3e359ec6189dc17dc27f0b4c3351a17144992e89fcf0d1a9b33a9e5098b8",
        "urls": [
          "bzz-raw://b103aba2158b202f827433b5428aa746d523c1b54d229eb09ad91896ee73eb01",
          "dweb:/ipfs/QmdUG38VKUEYKFYBrXFY4vwifpNMN6zFmhJGTr3NDo9oY8"
        ],
        "license": "MIT"
      },
      "contracts/facets/DiamondCutFacet.sol": {
        "keccak256": "0x4ca051570507ad7b50ea2e722d9060809314b15ffa23a91948d2dbd6b521db89",
        "urls": [
          "bzz-raw://4b3b10e502a2b11c0f7fef4b4e4ae9de10c10faadf3d85825a2bc1766d1aeb5f",
          "dweb:/ipfs/QmaxaiYYEvjbWDxBTi8W3TnVhU1pmNkVegpLMwovBmYDsG"
        ],
        "license": "MIT"
      },
      "contracts/facets/DiamondLoupeFacet.sol": {
        "keccak256": "0x28838679164b5363e0762a1e26271ce99a3e8b1e1562f92d429716a6fe87ce77",
        "urls": [
          "bzz-raw://16b7a2738db9f9ee99b7baf9cba08f7af9720b235c09e21859e50eaeb2a458fd",
          "dweb:/ipfs/QmTFDxH1BkxuiBHY4bcTWwNv4XVQaGHEhf74DrBi2WefhB"
        ],
        "license": "MIT"
      },
      "contracts/facets/ERC20Facet.sol": {
        "keccak256": "0x74ceca395aa712d6942ce60f27ccf6e8b55a9ed571e8ca36b8a7f2010dee6a56",
        "urls": [
          "bzz-raw://ccd739d858d13d6f5c5c849a2c760f84960ad394d82c5997c44c34acf87be56f",
          "dweb:/ipfs/QmVUStwgM2YEScBZqvNtLtf3cyx6Sfhxubdwvyasg4uRi7"
        ],
        "license": "MIT"
      },
      "contracts/facets/OwnershipFacet.sol": {
        "keccak256": "0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9",
        "urls": [
          "bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097",
          "dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc",
        "urls": [
          "bzz-raw://119d9a5acd99b9462a8341c9b95ddd468648799eefa47038f81521431743c1ae",
          "dweb:/ipfs/QmTF7WNyPWTUtUzNcpq5rf5v2uw5TwzqsSg9D53pfQufcu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7",
        "urls": [
          "bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45",
          "dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC173.sol": {
        "keccak256": "0x96b5a2b087e7bdf702d056fb1b9f6fd61088f1b1d5b49e97493ad46e9d0984f7",
        "urls": [
          "bzz-raw://6867fdb53506b4ba7ede7588cab26a94759026f70f2ca681b1e0f8fc8ba897b3",
          "dweb:/ipfs/QmbHHjotcmTL8ET4BCMiU5Fq8jydVVbuctjCFeRB1LBqt4"
        ],
        "license": "MIT"
      },
      "contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x537c55e709758a23b3981bc811a364899e45e29794b499a2c2e1db9f29a6168c",
        "urls": [
          "bzz-raw://a0c3e0e656afe57189f23fdd2c6963da3f696194ac99199b095ad38113a92a5f",
          "dweb:/ipfs/QmYFpgV9ZhXrEJZ2tKtCsUL7815HsQuTufFx7GHBNkXrdK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/solidity-stringutils/src/strings.sol": {
        "keccak256": "0x42cad11a7033f2fe05dd68611d2304407a620ac985b91edf29d5868cfe196223",
        "urls": [
          "bzz-raw://3cbc2333234e1f00eab5e57c4bcaf5115661e5e066a17c70af587a0a96f24669",
          "dweb:/ipfs/QmPHvStqcvZL46LW5N2ExTwAaqNhRCcmAX66aR6oE1WDar"
        ],
        "license": null
      },
      "test/deployDiamond.t.sol": {
        "keccak256": "0xcfa492a9029511a3e2c7cd9c15888e3a78af3b5165b5a13815890e9a4efc368e",
        "urls": [
          "bzz-raw://bc9fb9676a218a82a024e9727ef33f3c2d3e056afc2c4b9ffb6afdc815fc42bb",
          "dweb:/ipfs/QmZo6aQ6QhiiyF2bDY5jQKSQXKfqrVp4bjbT9QothLZo8E"
        ],
        "license": "UNLICENSED"
      },
      "test/helpers/DiamondUtils.sol": {
        "keccak256": "0x074a057ec45684c7714aa93053ebbda31e8cba3a2d2d1adcca9c8b215b7666e7",
        "urls": [
          "bzz-raw://db4ccbca56e35b08c6493a82db32cfd4dda2d3ef93eaa4a89f813fcb441591bd",
          "dweb:/ipfs/QmeohoDBBrkfR8zfLqsPtEfRbhcZacBzsZ47imdk9NKPoS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/deployDiamond.t.sol",
    "id": 30015,
    "exportedSymbols": {
      "Context": [
        2295
      ],
      "DSTest": [
        4082
      ],
      "Diamond": [
        138
      ],
      "DiamondCutFacet": [
        174
      ],
      "DiamondDeployer": [
        30014
      ],
      "DiamondLoupeFacet": [
        358
      ],
      "DiamondUtils": [
        30217
      ],
      "ERC20": [
        893
      ],
      "IDiamondCut": [
        971
      ],
      "IDiamondLoupe": [
        1013
      ],
      "IERC165": [
        1024
      ],
      "IERC173": [
        1040
      ],
      "IERC20": [
        2247
      ],
      "IERC20Errors": [
        2074
      ],
      "IERC20Metadata": [
        2273
      ],
      "Iwrong": [
        29617
      ],
      "LibDiamond": [
        1962
      ],
      "OwnershipFacet": [
        933
      ],
      "StdAssertions": [
        4967
      ],
      "StdChains": [
        5503
      ],
      "StdCheats": [
        7440
      ],
      "StdStorage": [
        8347
      ],
      "StdUtils": [
        10412
      ],
      "Test": [
        10454
      ],
      "TestBase": [
        4139
      ],
      "Vm": [
        11611
      ],
      "console": [
        19675
      ],
      "console2": [
        27771
      ],
      "stdError": [
        7506
      ],
      "stdJson": [
        8173
      ],
      "stdMath": [
        8315
      ],
      "stdStorage": [
        9781
      ],
      "strings": [
        29602
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3747:30",
    "nodes": [
      {
        "id": 29604,
        "nodeType": "PragmaDirective",
        "src": "39:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 29605,
        "nodeType": "ImportDirective",
        "src": "64:49:30",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDiamondCut.sol",
        "file": "../contracts/interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 972,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29606,
        "nodeType": "ImportDirective",
        "src": "114:49:30",
        "nodes": [],
        "absolutePath": "contracts/facets/DiamondCutFacet.sol",
        "file": "../contracts/facets/DiamondCutFacet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 175,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29607,
        "nodeType": "ImportDirective",
        "src": "164:51:30",
        "nodes": [],
        "absolutePath": "contracts/facets/DiamondLoupeFacet.sol",
        "file": "../contracts/facets/DiamondLoupeFacet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 359,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29608,
        "nodeType": "ImportDirective",
        "src": "216:48:30",
        "nodes": [],
        "absolutePath": "contracts/facets/OwnershipFacet.sol",
        "file": "../contracts/facets/OwnershipFacet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 934,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29609,
        "nodeType": "ImportDirective",
        "src": "265:34:30",
        "nodes": [],
        "absolutePath": "contracts/Diamond.sol",
        "file": "../contracts/Diamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 139,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29610,
        "nodeType": "ImportDirective",
        "src": "301:44:30",
        "nodes": [],
        "absolutePath": "contracts/facets/ERC20Facet.sol",
        "file": "../contracts/facets/ERC20Facet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 894,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29611,
        "nodeType": "ImportDirective",
        "src": "347:36:30",
        "nodes": [],
        "absolutePath": "test/helpers/DiamondUtils.sol",
        "file": "./helpers/DiamondUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30015,
        "sourceUnit": 30218,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29617,
        "nodeType": "ContractDefinition",
        "src": "385:77:30",
        "nodes": [
          {
            "id": 29616,
            "nodeType": "FunctionDefinition",
            "src": "408:52:30",
            "nodes": [],
            "functionSelector": "14fb19db",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonExist",
            "nameLocation": "417:8:30",
            "parameters": {
              "id": 29612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:2:30"
            },
            "returnParameters": {
              "id": 29615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29616,
                  "src": "451:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:9:30"
            },
            "scope": 29617,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Iwrong",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          29617
        ],
        "name": "Iwrong",
        "nameLocation": "395:6:30",
        "scope": 30015,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 30014,
        "nodeType": "ContractDefinition",
        "src": "464:3321:30",
        "nodes": [
          {
            "id": 29624,
            "nodeType": "VariableDeclaration",
            "src": "570:15:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "diamond",
            "nameLocation": "578:7:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Diamond_$138",
              "typeString": "contract Diamond"
            },
            "typeName": {
              "id": 29623,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29622,
                "name": "Diamond",
                "nameLocations": [
                  "570:7:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 138,
                "src": "570:7:30"
              },
              "referencedDeclaration": 138,
              "src": "570:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Diamond_$138",
                "typeString": "contract Diamond"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29627,
            "nodeType": "VariableDeclaration",
            "src": "591:25:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dCutFacet",
            "nameLocation": "607:9:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
              "typeString": "contract DiamondCutFacet"
            },
            "typeName": {
              "id": 29626,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29625,
                "name": "DiamondCutFacet",
                "nameLocations": [
                  "591:15:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 174,
                "src": "591:15:30"
              },
              "referencedDeclaration": 174,
              "src": "591:15:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                "typeString": "contract DiamondCutFacet"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29630,
            "nodeType": "VariableDeclaration",
            "src": "622:24:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dLoupe",
            "nameLocation": "640:6:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
              "typeString": "contract DiamondLoupeFacet"
            },
            "typeName": {
              "id": 29629,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29628,
                "name": "DiamondLoupeFacet",
                "nameLocations": [
                  "622:17:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 358,
                "src": "622:17:30"
              },
              "referencedDeclaration": 358,
              "src": "622:17:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                "typeString": "contract DiamondLoupeFacet"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29633,
            "nodeType": "VariableDeclaration",
            "src": "652:21:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ownerF",
            "nameLocation": "667:6:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OwnershipFacet_$933",
              "typeString": "contract OwnershipFacet"
            },
            "typeName": {
              "id": 29632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29631,
                "name": "OwnershipFacet",
                "nameLocations": [
                  "652:14:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 933,
                "src": "652:14:30"
              },
              "referencedDeclaration": 933,
              "src": "652:14:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                "typeString": "contract OwnershipFacet"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29636,
            "nodeType": "VariableDeclaration",
            "src": "679:12:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "erc20F",
            "nameLocation": "685:6:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$893",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 29635,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29634,
                "name": "ERC20",
                "nameLocations": [
                  "679:5:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 893,
                "src": "679:5:30"
              },
              "referencedDeclaration": 893,
              "src": "679:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$893",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29639,
            "nodeType": "VariableDeclaration",
            "src": "697:18:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "diamondERC20",
            "nameLocation": "703:12:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$893",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 29638,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29637,
                "name": "ERC20",
                "nameLocations": [
                  "697:5:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 893,
                "src": "697:5:30"
              },
              "referencedDeclaration": 893,
              "src": "697:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$893",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29645,
            "nodeType": "VariableDeclaration",
            "src": "722:33:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reciever",
            "nameLocation": "730:8:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29640,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "722:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3132333434",
                  "id": 29643,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "749:5:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_12344_by_1",
                    "typeString": "int_const 12344"
                  },
                  "value": "12344"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_12344_by_1",
                    "typeString": "int_const 12344"
                  }
                ],
                "expression": {
                  "id": 29641,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4132,
                  "src": "741:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$11611",
                    "typeString": "contract Vm"
                  }
                },
                "id": 29642,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "744:4:30",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 10514,
                "src": "741:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 29644,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "741:14:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29651,
            "nodeType": "VariableDeclaration",
            "src": "761:30:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "spender",
            "nameLocation": "769:7:30",
            "scope": 30014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29646,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "761:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "333234",
                  "id": 29649,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "787:3:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_324_by_1",
                    "typeString": "int_const 324"
                  },
                  "value": "324"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_324_by_1",
                    "typeString": "int_const 324"
                  }
                ],
                "expression": {
                  "id": 29647,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4132,
                  "src": "779:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$11611",
                    "typeString": "contract Vm"
                  }
                },
                "id": 29648,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "782:4:30",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 10514,
                "src": "779:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 29650,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "779:12:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29811,
            "nodeType": "FunctionDefinition",
            "src": "798:1449:30",
            "nodes": [],
            "body": {
              "id": 29810,
              "nodeType": "Block",
              "src": "822:1425:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29657,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29651,
                        "src": "841:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5350454e444552",
                        "id": 29658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "850:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2cac083293772ca6820c9740cb63f055c62ed365baba8fc5026f75b1d6bc37a",
                          "typeString": "literal_string \"SPENDER\""
                        },
                        "value": "SPENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2cac083293772ca6820c9740cb63f055c62ed365baba8fc5026f75b1d6bc37a",
                          "typeString": "literal_string \"SPENDER\""
                        }
                      ],
                      "expression": {
                        "id": 29654,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "832:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "835:5:30",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10844,
                      "src": "832:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 29659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:28:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29660,
                  "nodeType": "ExpressionStatement",
                  "src": "832:28:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29664,
                        "name": "reciever",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29645,
                        "src": "879:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5245434945564552",
                        "id": 29665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "889:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_879683884816685ec18a15caba47394a15843d5fd826a04d0d93af6117a9d132",
                          "typeString": "literal_string \"RECIEVER\""
                        },
                        "value": "RECIEVER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_879683884816685ec18a15caba47394a15843d5fd826a04d0d93af6117a9d132",
                          "typeString": "literal_string \"RECIEVER\""
                        }
                      ],
                      "expression": {
                        "id": 29661,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "870:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "873:5:30",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10844,
                      "src": "870:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 29666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29667,
                  "nodeType": "ExpressionStatement",
                  "src": "870:30:30"
                },
                {
                  "expression": {
                    "id": 29673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29668,
                      "name": "dCutFacet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29627,
                      "src": "934:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                        "typeString": "contract DiamondCutFacet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "946:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DiamondCutFacet_$174_$",
                          "typeString": "function () returns (contract DiamondCutFacet)"
                        },
                        "typeName": {
                          "id": 29670,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29669,
                            "name": "DiamondCutFacet",
                            "nameLocations": [
                              "950:15:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 174,
                            "src": "950:15:30"
                          },
                          "referencedDeclaration": 174,
                          "src": "950:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                            "typeString": "contract DiamondCutFacet"
                          }
                        }
                      },
                      "id": 29672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "946:21:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                        "typeString": "contract DiamondCutFacet"
                      }
                    },
                    "src": "934:33:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                      "typeString": "contract DiamondCutFacet"
                    }
                  },
                  "id": 29674,
                  "nodeType": "ExpressionStatement",
                  "src": "934:33:30"
                },
                {
                  "expression": {
                    "id": 29691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29675,
                      "name": "diamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29624,
                      "src": "977:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Diamond_$138",
                        "typeString": "contract Diamond"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 29681,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1020:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                                "typeString": "contract DiamondDeployer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                                "typeString": "contract DiamondDeployer"
                              }
                            ],
                            "id": 29680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1012:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29679,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1012:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1012:13:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 29685,
                              "name": "dCutFacet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29627,
                              "src": "1047:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                                "typeString": "contract DiamondCutFacet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DiamondCutFacet_$174",
                                "typeString": "contract DiamondCutFacet"
                              }
                            ],
                            "id": 29684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1039:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29683,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1039:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1039:18:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "4d5444546f6b656e",
                          "id": 29687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1071:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_514f0bce153ba8856a37f93fa921673dfd219c6d3d3c17b13c7a0f28f53dde2f",
                            "typeString": "literal_string \"MTDToken\""
                          },
                          "value": "MTDToken"
                        },
                        {
                          "hexValue": "4d5444",
                          "id": 29688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1095:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fef7437f43ea3e0ee34383c56fea4754d9f003b140432ca1eaa3380fd8aa2147",
                            "typeString": "literal_string \"MTD\""
                          },
                          "value": "MTD"
                        },
                        {
                          "hexValue": "3138",
                          "id": 29689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1114:2:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_514f0bce153ba8856a37f93fa921673dfd219c6d3d3c17b13c7a0f28f53dde2f",
                            "typeString": "literal_string \"MTDToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fef7437f43ea3e0ee34383c56fea4754d9f003b140432ca1eaa3380fd8aa2147",
                            "typeString": "literal_string \"MTD\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 29678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "987:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_Diamond_$138_$",
                          "typeString": "function (address,address,string memory,string memory,uint8) payable returns (contract Diamond)"
                        },
                        "typeName": {
                          "id": 29677,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29676,
                            "name": "Diamond",
                            "nameLocations": [
                              "991:7:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 138,
                            "src": "991:7:30"
                          },
                          "referencedDeclaration": 138,
                          "src": "991:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Diamond_$138",
                            "typeString": "contract Diamond"
                          }
                        }
                      },
                      "id": 29690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "987:139:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Diamond_$138",
                        "typeString": "contract Diamond"
                      }
                    },
                    "src": "977:149:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Diamond_$138",
                      "typeString": "contract Diamond"
                    }
                  },
                  "id": 29692,
                  "nodeType": "ExpressionStatement",
                  "src": "977:149:30"
                },
                {
                  "expression": {
                    "id": 29698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29693,
                      "name": "dLoupe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29630,
                      "src": "1136:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                        "typeString": "contract DiamondLoupeFacet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1145:21:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DiamondLoupeFacet_$358_$",
                          "typeString": "function () returns (contract DiamondLoupeFacet)"
                        },
                        "typeName": {
                          "id": 29695,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29694,
                            "name": "DiamondLoupeFacet",
                            "nameLocations": [
                              "1149:17:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 358,
                            "src": "1149:17:30"
                          },
                          "referencedDeclaration": 358,
                          "src": "1149:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                            "typeString": "contract DiamondLoupeFacet"
                          }
                        }
                      },
                      "id": 29697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1145:23:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                        "typeString": "contract DiamondLoupeFacet"
                      }
                    },
                    "src": "1136:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                      "typeString": "contract DiamondLoupeFacet"
                    }
                  },
                  "id": 29699,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:32:30"
                },
                {
                  "expression": {
                    "id": 29705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29700,
                      "name": "ownerF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29633,
                      "src": "1178:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                        "typeString": "contract OwnershipFacet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1187:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_OwnershipFacet_$933_$",
                          "typeString": "function () returns (contract OwnershipFacet)"
                        },
                        "typeName": {
                          "id": 29702,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29701,
                            "name": "OwnershipFacet",
                            "nameLocations": [
                              "1191:14:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 933,
                            "src": "1191:14:30"
                          },
                          "referencedDeclaration": 933,
                          "src": "1191:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                            "typeString": "contract OwnershipFacet"
                          }
                        }
                      },
                      "id": 29704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1187:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                        "typeString": "contract OwnershipFacet"
                      }
                    },
                    "src": "1178:29:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                      "typeString": "contract OwnershipFacet"
                    }
                  },
                  "id": 29706,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:29:30"
                },
                {
                  "expression": {
                    "id": 29712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29707,
                      "name": "erc20F",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29636,
                      "src": "1217:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$893",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1226:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20_$893_$",
                          "typeString": "function () returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 29709,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29708,
                            "name": "ERC20",
                            "nameLocations": [
                              "1230:5:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 893,
                            "src": "1230:5:30"
                          },
                          "referencedDeclaration": 893,
                          "src": "1230:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$893",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 29711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1226:11:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$893",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1217:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$893",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 29713,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:20:30"
                },
                {
                  "expression": {
                    "id": 29721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29714,
                      "name": "diamondERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29639,
                      "src": "1247:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$893",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 29718,
                              "name": "diamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29624,
                              "src": "1276:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Diamond_$138",
                                "typeString": "contract Diamond"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Diamond_$138",
                                "typeString": "contract Diamond"
                              }
                            ],
                            "id": 29717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1268:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29716,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1268:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1268:16:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29715,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "1262:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$893_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 29720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1262:23:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$893",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1247:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$893",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 29722,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:38:30"
                },
                {
                  "assignments": [
                    29727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29727,
                      "mutability": "mutable",
                      "name": "cut",
                      "nameLocation": "1341:3:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 29810,
                      "src": "1323:21:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 29725,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29724,
                            "name": "FacetCut",
                            "nameLocations": [
                              "1323:8:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 948,
                            "src": "1323:8:30"
                          },
                          "referencedDeclaration": 948,
                          "src": "1323:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$948_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 29726,
                        "nodeType": "ArrayTypeName",
                        "src": "1323:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29734,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 29732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1362:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 29731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1347:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IDiamondCut.FacetCut memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 29729,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29728,
                            "name": "FacetCut",
                            "nameLocations": [
                              "1351:8:30"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 948,
                            "src": "1351:8:30"
                          },
                          "referencedDeclaration": 948,
                          "src": "1351:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$948_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 29730,
                        "nodeType": "ArrayTypeName",
                        "src": "1351:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      }
                    },
                    "id": 29733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:17:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1323:41:30"
                },
                {
                  "expression": {
                    "id": 29750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29735,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29727,
                        "src": "1375:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      "id": 29737,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 29736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1375:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29741,
                                  "name": "dLoupe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29630,
                                  "src": "1447:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                                    "typeString": "contract DiamondLoupeFacet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                                    "typeString": "contract DiamondLoupeFacet"
                                  }
                                ],
                                "id": 29740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1439:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29739,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1439:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1439:15:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 29743,
                                "name": "FacetCutAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "1480:14:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$939_$",
                                  "typeString": "type(enum IDiamondCut.FacetCutAction)"
                                }
                              },
                              "id": 29744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1495:3:30",
                              "memberName": "Add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 936,
                              "src": "1480:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FacetCutAction_$939",
                                "typeString": "enum IDiamondCut.FacetCutAction"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "4469616d6f6e644c6f7570654661636574",
                                  "id": 29746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1553:19:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2229211e4ea8f43facbc59c41df0b18e465737f2b276b674f540b6eeafda40d6",
                                    "typeString": "literal_string \"DiamondLoupeFacet\""
                                  },
                                  "value": "DiamondLoupeFacet"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_2229211e4ea8f43facbc59c41df0b18e465737f2b276b674f540b6eeafda40d6",
                                    "typeString": "literal_string \"DiamondLoupeFacet\""
                                  }
                                ],
                                "id": 29745,
                                "name": "generateSelectors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30216,
                                "src": "1535:17:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                                  "typeString": "function (string memory) returns (bytes4[] memory)"
                                }
                              },
                              "id": 29747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1535:38:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_FacetCutAction_$939",
                                "typeString": "enum IDiamondCut.FacetCutAction"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            ],
                            "id": 29738,
                            "name": "FacetCut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "1398:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_FacetCut_$948_storage_ptr_$",
                              "typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
                            }
                          },
                          "id": 29748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "1425:12:30",
                            "1472:6:30",
                            "1516:17:30"
                          ],
                          "names": [
                            "facetAddress",
                            "action",
                            "functionSelectors"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1398:190:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                            "typeString": "struct IDiamondCut.FacetCut memory"
                          }
                        }
                      ],
                      "id": 29749,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1384:214:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "src": "1375:223:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory"
                    }
                  },
                  "id": 29751,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:223:30"
                },
                {
                  "expression": {
                    "id": 29767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29752,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29727,
                        "src": "1609:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      "id": 29754,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 29753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1609:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29758,
                                  "name": "ownerF",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29633,
                                  "src": "1681:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                                    "typeString": "contract OwnershipFacet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OwnershipFacet_$933",
                                    "typeString": "contract OwnershipFacet"
                                  }
                                ],
                                "id": 29757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1673:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29756,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1673:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1673:15:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 29760,
                                "name": "FacetCutAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "1714:14:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$939_$",
                                  "typeString": "type(enum IDiamondCut.FacetCutAction)"
                                }
                              },
                              "id": 29761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1729:3:30",
                              "memberName": "Add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 936,
                              "src": "1714:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FacetCutAction_$939",
                                "typeString": "enum IDiamondCut.FacetCutAction"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "4f776e6572736869704661636574",
                                  "id": 29763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1787:16:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c270ea653cbd09aaba98a6cddbb78692b0762ac4f8e17d29f38c256a99feb537",
                                    "typeString": "literal_string \"OwnershipFacet\""
                                  },
                                  "value": "OwnershipFacet"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c270ea653cbd09aaba98a6cddbb78692b0762ac4f8e17d29f38c256a99feb537",
                                    "typeString": "literal_string \"OwnershipFacet\""
                                  }
                                ],
                                "id": 29762,
                                "name": "generateSelectors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30216,
                                "src": "1769:17:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                                  "typeString": "function (string memory) returns (bytes4[] memory)"
                                }
                              },
                              "id": 29764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1769:35:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_FacetCutAction_$939",
                                "typeString": "enum IDiamondCut.FacetCutAction"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            ],
                            "id": 29755,
                            "name": "FacetCut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "1632:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_FacetCut_$948_storage_ptr_$",
                              "typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
                            }
                          },
                          "id": 29765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "1659:12:30",
                            "1706:6:30",
                            "1750:17:30"
                          ],
                          "names": [
                            "facetAddress",
                            "action",
                            "functionSelectors"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1632:187:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                            "typeString": "struct IDiamondCut.FacetCut memory"
                          }
                        }
                      ],
                      "id": 29766,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1618:211:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "src": "1609:220:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory"
                    }
                  },
                  "id": 29768,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:220:30"
                },
                {
                  "expression": {
                    "id": 29784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29769,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29727,
                        "src": "1840:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      "id": 29771,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 29770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1840:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29775,
                                  "name": "erc20F",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29636,
                                  "src": "1912:6:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$893",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$893",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 29774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1904:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29773,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1904:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1904:15:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 29777,
                                "name": "FacetCutAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 939,
                                "src": "1945:14:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$939_$",
                                  "typeString": "type(enum IDiamondCut.FacetCutAction)"
                                }
                              },
                              "id": 29778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1960:3:30",
                              "memberName": "Add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 936,
                              "src": "1945:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FacetCutAction_$939",
                                "typeString": "enum IDiamondCut.FacetCutAction"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "4552433230",
                                  "id": 29780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2018:7:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8ae85d849167ff996c04040c44924fd364217285e4cad818292c7ac37c0a345b",
                                    "typeString": "literal_string \"ERC20\""
                                  },
                                  "value": "ERC20"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8ae85d849167ff996c04040c44924fd364217285e4cad818292c7ac37c0a345b",
                                    "typeString": "literal_string \"ERC20\""
                                  }
                                ],
                                "id": 29779,
                                "name": "generateSelectors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30216,
                                "src": "2000:17:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                                  "typeString": "function (string memory) returns (bytes4[] memory)"
                                }
                              },
                              "id": 29781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2000:26:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_FacetCutAction_$939",
                                "typeString": "enum IDiamondCut.FacetCutAction"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            ],
                            "id": 29772,
                            "name": "FacetCut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "1863:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_FacetCut_$948_storage_ptr_$",
                              "typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
                            }
                          },
                          "id": 29782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "1890:12:30",
                            "1937:6:30",
                            "1981:17:30"
                          ],
                          "names": [
                            "facetAddress",
                            "action",
                            "functionSelectors"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1863:178:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                            "typeString": "struct IDiamondCut.FacetCut memory"
                          }
                        }
                      ],
                      "id": 29783,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1849:202:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "src": "1840:211:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$948_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory"
                    }
                  },
                  "id": 29785,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:211:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29793,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29727,
                        "src": "2129:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "307830",
                            "id": 29796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2142:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2134:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2134:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 29798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2148:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 29789,
                                "name": "diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29624,
                                "src": "2108:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Diamond_$138",
                                  "typeString": "contract Diamond"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Diamond_$138",
                                  "typeString": "contract Diamond"
                                }
                              ],
                              "id": 29788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2100:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29787,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2100:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2100:16:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29786,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "2088:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$971_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 29791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2088:29:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDiamondCut_$971",
                          "typeString": "contract IDiamondCut"
                        }
                      },
                      "id": 29792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2118:10:30",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 960,
                      "src": "2088:40:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_FacetCut_$948_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory) external"
                      }
                    },
                    "id": 29799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:63:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29800,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:63:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 29804,
                                "name": "diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29624,
                                "src": "2214:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Diamond_$138",
                                  "typeString": "contract Diamond"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Diamond_$138",
                                  "typeString": "contract Diamond"
                                }
                              ],
                              "id": 29803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2206:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29802,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2206:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2206:16:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29801,
                          "name": "DiamondLoupeFacet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2188:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DiamondLoupeFacet_$358_$",
                            "typeString": "type(contract DiamondLoupeFacet)"
                          }
                        },
                        "id": 29806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2188:35:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DiamondLoupeFacet_$358",
                          "typeString": "contract DiamondLoupeFacet"
                        }
                      },
                      "id": 29807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2224:14:30",
                      "memberName": "facetAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 307,
                      "src": "2188:50:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 29808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:52:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 29809,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:52:30"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "807:5:30",
            "parameters": {
              "id": 29652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:2:30"
            },
            "returnParameters": {
              "id": 29653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29830,
            "nodeType": "FunctionDefinition",
            "src": "2253:143:30",
            "nodes": [],
            "body": {
              "id": 29829,
              "nodeType": "Block",
              "src": "2283:113:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374",
                        "id": 29817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        },
                        "value": "Diamond: Function does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        }
                      ],
                      "expression": {
                        "id": 29814,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "2293:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2296:12:30",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11375,
                      "src": "2293:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:51:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29819,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:51:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 29823,
                                "name": "diamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29624,
                                "src": "2369:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Diamond_$138",
                                  "typeString": "contract Diamond"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Diamond_$138",
                                  "typeString": "contract Diamond"
                                }
                              ],
                              "id": 29822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2361:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29821,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2361:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2361:16:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29820,
                          "name": "Iwrong",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29617,
                          "src": "2354:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Iwrong_$29617_$",
                            "typeString": "type(contract Iwrong)"
                          }
                        },
                        "id": 29825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2354:24:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Iwrong_$29617",
                          "typeString": "contract Iwrong"
                        }
                      },
                      "id": 29826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2379:8:30",
                      "memberName": "nonExist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29616,
                      "src": "2354:33:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 29827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:35:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29828,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:35:30"
                }
              ]
            },
            "functionSelector": "d9000ef3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInvalid",
            "nameLocation": "2262:11:30",
            "parameters": {
              "id": 29812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2273:2:30"
            },
            "returnParameters": {
              "id": 29813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29841,
            "nodeType": "FunctionDefinition",
            "src": "2402:85:30",
            "nodes": [],
            "body": {
              "id": 29840,
              "nodeType": "Block",
              "src": "2429:58:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29834,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2448:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2461:4:30",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 399,
                          "src": "2448:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 29836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2448:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d5444546f6b656e",
                        "id": 29837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_514f0bce153ba8856a37f93fa921673dfd219c6d3d3c17b13c7a0f28f53dde2f",
                          "typeString": "literal_string \"MTDToken\""
                        },
                        "value": "MTDToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_514f0bce153ba8856a37f93fa921673dfd219c6d3d3c17b13c7a0f28f53dde2f",
                          "typeString": "literal_string \"MTDToken\""
                        }
                      ],
                      "id": 29833,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 3935,
                      "src": "2439:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 29838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29839,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:41:30"
                }
              ]
            },
            "functionSelector": "cc8668de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testName",
            "nameLocation": "2411:8:30",
            "parameters": {
              "id": 29831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2419:2:30"
            },
            "returnParameters": {
              "id": 29832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2429:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29852,
            "nodeType": "FunctionDefinition",
            "src": "2493:84:30",
            "nodes": [],
            "body": {
              "id": 29851,
              "nodeType": "Block",
              "src": "2522:55:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d5444",
                        "id": 29845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2541:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fef7437f43ea3e0ee34383c56fea4754d9f003b140432ca1eaa3380fd8aa2147",
                          "typeString": "literal_string \"MTD\""
                        },
                        "value": "MTD"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29846,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2548:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2561:6:30",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 410,
                          "src": "2548:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 29848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2548:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fef7437f43ea3e0ee34383c56fea4754d9f003b140432ca1eaa3380fd8aa2147",
                          "typeString": "literal_string \"MTD\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 29844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 3935,
                      "src": "2532:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 29849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29850,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:38:30"
                }
              ]
            },
            "functionSelector": "77fc70c6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSymbol",
            "nameLocation": "2502:10:30",
            "parameters": {
              "id": 29842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:2:30"
            },
            "returnParameters": {
              "id": 29843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29863,
            "nodeType": "FunctionDefinition",
            "src": "2583:85:30",
            "nodes": [],
            "body": {
              "id": 29862,
              "nodeType": "Block",
              "src": "2614:54:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29856,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2633:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2646:8:30",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 421,
                          "src": "2633:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 29858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2633:23:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 29859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2658:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 29855,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "2624:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29861,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:37:30"
                }
              ]
            },
            "functionSelector": "5d4696cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDecimals",
            "nameLocation": "2592:12:30",
            "parameters": {
              "id": 29853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2604:2:30"
            },
            "returnParameters": {
              "id": 29854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2614:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29884,
            "nodeType": "FunctionDefinition",
            "src": "2674:156:30",
            "nodes": [],
            "body": {
              "id": 29883,
              "nodeType": "Block",
              "src": "2701:129:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29869,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29651,
                        "src": "2729:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130653138",
                        "id": 29870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2738:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29866,
                        "name": "diamondERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29639,
                        "src": "2711:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$893",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 29868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2724:4:30",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 699,
                      "src": "2711:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 29871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:33:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29872,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:33:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29874,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2763:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2776:11:30",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 432,
                          "src": "2763:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 29876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2763:26:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29879,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29651,
                            "src": "2814:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29877,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2791:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2804:9:30",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 447,
                          "src": "2791:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2791:31:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29873,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "2754:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:69:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29882,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:69:30"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "2683:8:30",
            "parameters": {
              "id": 29864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2691:2:30"
            },
            "returnParameters": {
              "id": 29865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2701:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29908,
            "nodeType": "FunctionDefinition",
            "src": "2836:166:30",
            "nodes": [],
            "body": {
              "id": 29907,
              "nodeType": "Block",
              "src": "2866:136:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29890,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29651,
                            "src": "2908:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31653138",
                            "id": 29891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2917:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 29888,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2887:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2900:7:30",
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 514,
                          "src": "2887:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 29892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2887:35:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29887,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2565,
                        2586
                      ],
                      "referencedDeclaration": 2565,
                      "src": "2876:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 29893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:47:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29894,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:47:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 29900,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2973:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                                  "typeString": "contract DiamondDeployer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                                  "typeString": "contract DiamondDeployer"
                                }
                              ],
                              "id": 29899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2965:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29898,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2965:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2965:13:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 29902,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29651,
                            "src": "2980:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29896,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "2942:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2955:9:30",
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 490,
                          "src": "2942:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 29903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2942:46:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 29904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2990:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 29895,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "2933:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:62:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29906,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:62:30"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "2845:11:30",
            "parameters": {
              "id": 29885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2856:2:30"
            },
            "returnParameters": {
              "id": 29886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29936,
            "nodeType": "FunctionDefinition",
            "src": "3008:195:30",
            "nodes": [],
            "body": {
              "id": 29935,
              "nodeType": "Block",
              "src": "3039:164:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 29911,
                      "name": "testMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29884,
                      "src": "3049:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 29912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3049:10:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29913,
                  "nodeType": "ExpressionStatement",
                  "src": "3049:10:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29917,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29651,
                        "src": "3083:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29914,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "3069:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3072:10:30",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11339,
                      "src": "3069:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 29918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3069:22:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29919,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:22:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29923,
                        "name": "reciever",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29645,
                        "src": "3123:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "37363430",
                        "id": 29924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3133:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7640_by_1",
                          "typeString": "int_const 7640"
                        },
                        "value": "7640"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_7640_by_1",
                          "typeString": "int_const 7640"
                        }
                      ],
                      "expression": {
                        "id": 29920,
                        "name": "diamondERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29639,
                        "src": "3101:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$893",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 29922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3114:8:30",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 471,
                      "src": "3101:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29926,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:37:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29930,
                            "name": "reciever",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29645,
                            "src": "3180:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29928,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "3157:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3170:9:30",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 447,
                          "src": "3157:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3157:32:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "37363430",
                        "id": 29932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3191:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7640_by_1",
                          "typeString": "int_const 7640"
                        },
                        "value": "7640"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_7640_by_1",
                          "typeString": "int_const 7640"
                        }
                      ],
                      "id": 29927,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "3148:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3148:48:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29934,
                  "nodeType": "ExpressionStatement",
                  "src": "3148:48:30"
                }
              ]
            },
            "functionSelector": "d591221f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransfer",
            "nameLocation": "3017:12:30",
            "parameters": {
              "id": 29909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3029:2:30"
            },
            "returnParameters": {
              "id": 29910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3039:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30000,
            "nodeType": "FunctionDefinition",
            "src": "3209:424:30",
            "nodes": [],
            "body": {
              "id": 29999,
              "nodeType": "Block",
              "src": "3246:387:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 29939,
                      "name": "testMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29884,
                      "src": "3256:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 29940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3256:10:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29941,
                  "nodeType": "ExpressionStatement",
                  "src": "3256:10:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29945,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29651,
                        "src": "3285:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29942,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "3276:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11611",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3279:5:30",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11334,
                      "src": "3276:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 29946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:17:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29947,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:17:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29953,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3332:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                              "typeString": "contract DiamondDeployer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                              "typeString": "contract DiamondDeployer"
                            }
                          ],
                          "id": 29952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3324:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29951,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3324:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3324:13:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 29955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3339:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29948,
                        "name": "diamondERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29639,
                        "src": "3303:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$893",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 29950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3316:7:30",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 514,
                      "src": "3303:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29957,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:41:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29961,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29651,
                            "src": "3391:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 29962,
                            "name": "reciever",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29645,
                            "src": "3400:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "302e35653138",
                            "id": 29963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3410:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000000000000_by_1",
                              "typeString": "int_const 500000000000000000"
                            },
                            "value": "0.5e18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_500000000000000000_by_1",
                              "typeString": "int_const 500000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 29959,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "3365:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3378:12:30",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 546,
                          "src": "3365:25:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 29964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3365:52:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29958,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2565,
                        2586
                      ],
                      "referencedDeclaration": 2565,
                      "src": "3354:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 29965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:64:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29966,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:64:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29970,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29651,
                            "src": "3460:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 29973,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3477:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                                  "typeString": "contract DiamondDeployer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DiamondDeployer_$30014",
                                  "typeString": "contract DiamondDeployer"
                                }
                              ],
                              "id": 29972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3469:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29971,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3469:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 29974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3469:13:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29968,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "3437:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3450:9:30",
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 490,
                          "src": "3437:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 29975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3437:46:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "id": 29978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653138",
                          "id": 29976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3485:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e35653138",
                          "id": 29977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3492:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5e18"
                        },
                        "src": "3485:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 29967,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "3428:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3428:71:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29980,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:71:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29984,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29651,
                            "src": "3541:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29982,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "3518:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3531:9:30",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 447,
                          "src": "3518:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3518:31:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9500000000000000000_by_1",
                          "typeString": "int_const 9500000000000000000"
                        },
                        "id": 29988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130653138",
                          "id": 29986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3551:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e35653138",
                          "id": 29987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3559:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5e18"
                        },
                        "src": "3551:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9500000000000000000_by_1",
                          "typeString": "int_const 9500000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9500000000000000000_by_1",
                          "typeString": "int_const 9500000000000000000"
                        }
                      ],
                      "id": 29981,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "3509:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3509:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29990,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:57:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29994,
                            "name": "reciever",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29645,
                            "src": "3608:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 29992,
                            "name": "diamondERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29639,
                            "src": "3585:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$893",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 29993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3598:9:30",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 447,
                          "src": "3585:22:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 29995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3585:32:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35653138",
                        "id": 29996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3619:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 29991,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4270,
                        4295,
                        4308,
                        4324,
                        4366,
                        4408,
                        4450,
                        4487,
                        4524,
                        4561,
                        2616,
                        2641,
                        2671,
                        2696,
                        2755,
                        2780,
                        2810,
                        2835,
                        3935,
                        3970
                      ],
                      "referencedDeclaration": 2810,
                      "src": "3576:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 29997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:50:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29998,
                  "nodeType": "ExpressionStatement",
                  "src": "3576:50:30"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "3218:16:30",
            "parameters": {
              "id": 29937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3234:2:30"
            },
            "returnParameters": {
              "id": 29938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3246:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30013,
            "nodeType": "FunctionDefinition",
            "src": "3639:144:30",
            "nodes": [],
            "body": {
              "id": 30012,
              "nodeType": "Block",
              "src": "3781:2:30",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              960
            ],
            "functionSelector": "1f931c1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "diamondCut",
            "nameLocation": "3648:10:30",
            "overrides": {
              "id": 30010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3772:8:30"
            },
            "parameters": {
              "id": 30009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30004,
                  "mutability": "mutable",
                  "name": "_diamondCut",
                  "nameLocation": "3688:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30013,
                  "src": "3668:31:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDiamondCut.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30002,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30001,
                        "name": "FacetCut",
                        "nameLocations": [
                          "3668:8:30"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 948,
                        "src": "3668:8:30"
                      },
                      "referencedDeclaration": 948,
                      "src": "3668:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$948_storage_ptr",
                        "typeString": "struct IDiamondCut.FacetCut"
                      }
                    },
                    "id": 30003,
                    "nodeType": "ArrayTypeName",
                    "src": "3668:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$948_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamondCut.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30006,
                  "mutability": "mutable",
                  "name": "_init",
                  "nameLocation": "3717:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30013,
                  "src": "3709:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30008,
                  "mutability": "mutable",
                  "name": "_calldata",
                  "nameLocation": "3747:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30013,
                  "src": "3732:24:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30007,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3658:104:30"
            },
            "returnParameters": {
              "id": 30011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3781:0:30"
            },
            "scope": 30014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29618,
              "name": "DiamondUtils",
              "nameLocations": [
                "492:12:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30217,
              "src": "492:12:30"
            },
            "id": 29619,
            "nodeType": "InheritanceSpecifier",
            "src": "492:12:30"
          },
          {
            "baseName": {
              "id": 29620,
              "name": "IDiamondCut",
              "nameLocations": [
                "506:11:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 971,
              "src": "506:11:30"
            },
            "id": 29621,
            "nodeType": "InheritanceSpecifier",
            "src": "506:11:30"
          }
        ],
        "canonicalName": "DiamondDeployer",
        "contractDependencies": [
          138,
          174,
          358,
          893,
          933
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30014,
          971,
          30217,
          10454,
          4139,
          4136,
          10412,
          7440,
          7051,
          5503,
          4967,
          4082
        ],
        "name": "DiamondDeployer",
        "nameLocation": "473:15:30",
        "scope": 30015,
        "usedErrors": [],
        "usedEvents": [
          970,
          2301,
          2305,
          2309,
          2313,
          2317,
          2321,
          2325,
          2329,
          2335,
          2341,
          2349,
          2357,
          2363,
          2369,
          2375,
          2381,
          4164,
          4169,
          4174,
          4181,
          4188,
          4195
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 30
}